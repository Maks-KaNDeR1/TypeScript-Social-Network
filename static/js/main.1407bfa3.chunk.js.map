{"version":3,"sources":["components/Users/User/user.module.css","components/Users/users.module.css","components/Music/Music.module.css","components/Header/Header.module.css","components/Profile/profile-reducer.ts","assets/images/user.png","hoc/WithRouter.tsx","components/Dialogs/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.tsx","components/Calendar/Calendar.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Music/Music.tsx","components/Header/Header.tsx","components/Login/auth-reducer.ts","components/Header/HeaderContainer.tsx","redux/app-reducer.ts","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","api/api.ts","components/Login/Login.module.css","components/Users/users-reducer.ts","components/Navbar/Navbar.module.css","components/common/Preloader/Preloader.tsx"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","newPostText","profile","status","addPost","type","updateNewPostText","text","newText","setStatus","getUserProfile","userId","dispatch","a","profileAPI","getUserProfie","res","data","getStatus","updateStatus","resultCode","savePhoto","photos","getState","auth","saveProfilePhoto","saveProfile","Promise","reject","messages","profileReducer","state","action","newPost","filter","p","postId","withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","ADD_MESSAGE","dialogs","name","src","avatar","time","addMessage","title","dialogsReducer","rand","Math","floor","random","length","min","Date","getMinutes","newMessage","styleIcon","color","Navbar","className","s","nav","item","style","to","Calendar","useState","show","setShow","setCounter","date","setDate","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","useEffect","setInterval","display","flexDirection","alignItems","onMouseEnter","onMouseLeave","marginTop","User","user","followingInProgress","unfollow","follow","followOrUnfollowButton","followOrUnfollow","gradientButton","disabled","some","onClick","margin","fontSize","userBlock","small","userPhoto","alt","followed","Users","currentPage","totalUsersCount","onPageChanged","users","onShowSizeChanged","pagination","showQuickJumper","onChange","page","pageSize","showSizeChanger","defaultCurrent","total","defaultPageSize","pageSizeOptions","usersBlock","map","u","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","pageSizeClick","setPageSize","this","Preloader","React","compose","connect","toggleIsFetching","setCurrentPage","requestUsers","Music","switchOnOff","setSwitchOnOff","audio","Audio","styles","pleer","pause","play","Header","isAuth","login","logout","header","loginBlock","SET_USER_DATA","email","authReducer","payload","setAuthUserData","getAuthUserData","authAPI","me","HeaderContainer","then","console","log","INITIALIZED_SUCCESS","initialized","appReducer","LoginForm","useDispatch","eye","setEye","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","test","onSubmit","captcha","loginTC","Grid","container","justifyContent","handleSubmit","FormControl","loginBox","inputField","social","signIn","FormGroup","formGroup","TextField","width","textField","label","variant","getFieldProps","touched","error","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","FormControlLabel","control","Checkbox","handleChange","value","loginButton","Login","useSelector","loginForm","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","element","textAlign","top","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","dialogsPage","profilePage","usersReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","delete","post","put","photoFile","formData","FormData","append","toggleFollowingProgress","items","totalCount","followUnfollowFlow","apiMethod","bind","ldsspinner"],"mappings":"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","file":"static/js/main.1407bfa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"user_userPhoto__RrrGk\",\"userBlock\":\"user_userBlock__2HiZf\",\"gradientButton\":\"user_gradientButton__3tfXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"users_usersBlock__ZeHVP\",\"pagination\":\"users_pagination__G1TWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pleer\":\"Music_pleer__2ayyf\",\"item\":\"Music_item__1eXWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H_o5P\"};","import { profileAPI } from \"../../api/api\"\r\nimport { AppThunkType } from \"../../redux/redux-store\"\r\n\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype PhotosType = {\r\n    small?: string\r\n    large?: string\r\n}\r\n\r\nexport type ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n\r\n}\r\n\r\nexport type initialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    status: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Yo\", likesCount: 23 },\r\n        { id: 2, message: \"I'm in to IT\", likesCount: 12 },\r\n        { id: 3, message: \"I'\", likesCount: 57 },\r\n        { id: 4, message: \"I'm a BOSS\", likesCount: 23 }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.newText }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\ntype AddPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => ({ type: ADD_POST } as const)\r\n\r\ntype UpdateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (text: string) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\r\n\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: ProfileType) =>\r\n    ({ type: SET_USER_PROFILE, profile } as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (status: string) =>\r\n    ({ type: SET_STATUS, status } as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({ type: DELETE_POST, postId } as const)\r\n\r\n\r\nexport const getUserProfile = (userId: any): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getUserProfie(userId)\r\n    dispatch(setUserProfile(res.data));\r\n}\r\n\r\nexport const getStatus = (userId: number): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (photos: File): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const res = await profileAPI.saveProfilePhoto(photos)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (profile: ProfileType): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const res = await profileAPI.saveProfile(profile);\r\n\r\n    if (res.data.resultCode === 0) {\r\n        // dispatch(getUserProfile(userId));\r\n    } else {\r\n        return Promise.reject(res.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostType\r\n    | UpdateNewPostTextType\r\n    | SetUserProfileType\r\n    | SetStatusType\r\n    | DeletePostType\r\n\r\nexport default profileReducer\r\n","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","\r\nimport React, { ComponentType } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n    function ComponentWithRouterProp(props: T) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n }\r\n \r\n","\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        { id: 1, name: 'Sonechka', src: 'https://sun2-10.userapi.com/s/v1/if1/w1y1anZFpf-CNhV-lyM8U6QCcnKkY164nwL0HkaM1FCU6CxDm4dQ3F0i9yR8ib5JCojY2P7X.jpg?size=100x0&quality=96&crop=58,0,339,339&ava=1' },\r\n        { id: 2, name: 'Maks', src: 'https://sun2-4.userapi.com/s/v1/ig2/tmGqC7l6DkVdw8p1o8raCVmvPtRmFeWjVODUXOn8ClIXSBpLUKtcascbdMK0i0qBhTs0aXgP7qSj-evbmXNdcL9X.jpg?size=100x0&quality=96&crop=26,6,1580,1580&ava=1' },\r\n        { id: 3, name: 'Dimych', src: 'https://sun2-4.userapi.com/s/v1/if1/WKIru_JWpP_NC33uxlLNSzN_FCVYF2ATJmiCUPBesjXHmmhm6r9zUDFCO0ewZ2F-RZC9qFYz.jpg?size=50x0&quality=96&crop=322,289,1006,1006&ava=1' },\r\n        { id: 4, name: 'Masha', src: 'https://sun2-3.userapi.com/s/v1/ig1/ZEoKnBuJ0WePJx9izTmq4QNH657mCi5IPIfuxZJGyaz-kWOF-CrCBqKT6FRZHfZ16xZsqYT7.jpg?size=100x0&quality=96&crop=160,0,759,759&ava=1' },\r\n        { id: 5, name: 'Ulya', src: 'https://sun2-3.userapi.com/s/v1/ig2/lxJkYCHND2QJIj6Y6CiLOIZn64fKd1lp2_pkoHGcLhi5ugP7zsKEcKpDSDVkWFsVWk_9JWws4VdRK05CIAZns7-j.jpg?size=100x0&quality=96&crop=0,274,1215,1215&ava=1' },\r\n        { id: 6, name: 'Ustina', src: 'https://sun9-59.userapi.com/impf/Xr5HIhSHG2Xn-b6EXFY0x1KMNfa5VpmofbNzlQ/cS6GLKimqdg.jpg?size=1080x1080&quality=96&sign=e702e7ebd20a8cddfbebd77957c00ecc&type=album' },\r\n        { id: 7, name: 'Sasha', src: 'https://sun2-9.userapi.com/s/v1/ig2/k-NYQ6bwT9zwVHoWsY9mEW35tf56gqKIZSogiC5qcE32xOlTKCMvn3poYzyhEn0fKrStu2jhWt6di522b1IjrWHb.jpg?size=100x0&quality=96&crop=12,12,200,200&ava=1' },\r\n        { id: 8, name: 'Vova', src: 'https://sun2-4.userapi.com/s/v1/ig1/X2AsqRo-dhkjrmbPk2fwjAJjQipXwXvaGtQFw42mSpDrZUYK5pR5AiM6HUwJktqkET6WctPB.jpg?size=100x0&quality=96&crop=615,256,588,588&ava=1' }\r\n    ] as Array<DialogsType>,\r\n    message: [ \r\n        { id: 1, avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Sasha', message: 'Hello, my friends', time: '22:00'\r\n    },\r\n    { id: 2, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Hi all', time: '22:07'\r\n    },\r\n    { id: 3, avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\r\n        name: 'Sonya', message: 'yo yo yo', time: '22:15'\r\n    },\r\n    { id: 4, avatar: 'https://top-tok.ru/wp-content/uploads/e8a52fc5-620c-4d7c-8f34-ddd8f605f95a.jpg',\r\n        name: 'Natali', message: 'How a you?', time: '22:17'\r\n    },\r\n    { id: 5, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Everything is fine', time: '22:18'\r\n    },\r\n    { id: 6, avatar: 'https://i.pinimg.com/originals/38/20/44/382044ab16b8772d62a6043dc202bd86.jpg',\r\n        name: 'Galya', message: 'What do you do', time: '22:19'\r\n    },\r\n    { id: 7, avatar: 'https://papik.pro/uploads/posts/2022-01/thumbs/1642409371_29-papik-pro-p-gacha-stikeri-31.jpg',\r\n        name: 'Dima', message: 'I went out for a walk', time: '22:19'\r\n    },\r\n    { id: 8, avatar: 'https://yt3.ggpht.com/a/AATXAJwg1JVXn5R_VJH_tSFHvGrBbwGEfEW0yDUBAgDkag=s900-c-k-c0xffffffff-no-rj-mo',\r\n        name: 'Alina', message: 'I will sleep', time: '22:23'\r\n    }\r\n] as Array<MessageType>,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: DialogsActionsType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            const rand = Math.floor(Math.random() * state.message.length)\r\n            let min = new Date().getMinutes()\r\n\r\n            let newMessage: MessageType = {\r\n                id: 9,\r\n                avatar: state.message[rand].avatar,\r\n                name: state.message[rand].name,\r\n                message: action.title,\r\n                time: '15 :' + min\r\n        \r\n            }\r\n            return {\r\n                ...state,\r\n                message: [ ...state.message, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype addMessageType = ReturnType<typeof addMessage>\r\nexport const addMessage = (title: string) => ({ type: ADD_MESSAGE, title } as const)\r\n\r\n\r\nexport type DialogsActionsType = addMessageType\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsspinner\":\"Preloader_ldsspinner__2ajmc\",\"lds-spinner\":\"Preloader_lds-spinner__2eR9q\"};","import React from 'react'\r\nimport { FaCogs, FaFacebookMessenger, FaMusic, FaRegCalendarAlt, FaRegUserCircle, FaUsers } from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.item} >\r\n                <FaRegUserCircle style={styleIcon} />\r\n                <NavLink to=\"/profile/\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaFacebookMessenger style={styleIcon} />\r\n                <NavLink to=\"/dialogs/\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaMusic style={styleIcon} />\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaUsers style={styleIcon} />\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaCogs style={styleIcon} />\r\n                <NavLink to=\"/setting\">Setting</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaRegCalendarAlt style={styleIcon} />\r\n                <NavLink to=\"/calendar\">Сalendar</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet styleIcon: React.CSSProperties = {\r\n    color: 'rgb(56, 0, 0)'\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Calendar() {\r\n\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [ , setCounter] = useState(0)\r\n    const [date, setDate] = useState<Date>()\r\n    \r\n    const stringTime = date?.toLocaleTimeString() || <br /> // fix with date\r\n    const stringDate = date?.toLocaleDateString()\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date())\r\n            setCounter(state => state + 1)\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            {/* <h1> {day} {month}  </h1> */}\r\n            <div \r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                <h2 style={{ marginTop: '0px', color: 'black' }}\r\n                > {stringTime}\r\n                </h2>\r\n            </div>\r\n            {show ? (\r\n                <div>\r\n                    <h1> {stringDate} </h1>\r\n                </div>\r\n            ) : <br />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Calendar;\r\n","\r\nimport React from 'react';\r\nimport s from './user.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport { UserType } from '../users-reducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollow, follow }) => {\r\n\r\n\r\n    const followOrUnfollowButton = (followOrUnfollow: (id: number) => void, title: string) => {\r\n        return <>\r\n            <button\r\n                className={s.gradientButton}\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => { followOrUnfollow(user.id) }}\r\n            >\r\n                {followingInProgress.some(id => id === user.id) && (\r\n                    <i\r\n                        className=\"fa fa-refresh fa-spin\"\r\n                        style={{ margin: \"1px 2px 0 1px\", fontSize: \"12px\" }}\r\n                    />\r\n                )} {title} </button>\r\n        </>\r\n    }\r\n\r\n    return <div className={s.userBlock}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`} >\r\n                    <img src={user.photos?.small != null ? user.photos?.small : userPhoto}\r\n                        className={s.userPhoto} alt='profilePhoto' />\r\n                </NavLink>\r\n            </div>\r\n            <div >\r\n\r\n                {user.followed\r\n                    ? followOrUnfollowButton(follow, 'Unfollow')\r\n                    : followOrUnfollowButton(unfollow, 'Follow')\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status || <br />} </div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n","\r\nimport React from 'react';\r\nimport { UserType } from './users-reducer';\r\nimport s from './users.module.css';\r\nimport User from './User/User';\r\nimport type { PaginationProps } from 'antd';\r\nimport { Pagination } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    // pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number, pageSize?: number) => void\r\n    onShowSizeChanged: (pageNumber: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (\r\n    {\r\n        currentPage, totalUsersCount, onPageChanged, users, onShowSizeChanged,\r\n        ...props\r\n    }) => {\r\n\r\n\r\n\r\n    const onChange: PaginationProps['onChange'] = (page, pageSize) => {\r\n        onPageChanged(page, pageSize);\r\n    };\r\n\r\n    return <div>\r\n\r\n        <div className={s.pagination}>\r\n            <Pagination\r\n                showQuickJumper\r\n                onChange={onChange}\r\n                showSizeChanger\r\n                defaultCurrent={1}\r\n                total={totalUsersCount}\r\n                defaultPageSize={15}\r\n                pageSizeOptions={[15, 30, 60, 90]}\r\n            />\r\n        </div>\r\n\r\n        <div className={s.usersBlock} >\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { UserType } from \"./users-reducer\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users: Array<UserType>) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage;\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress;\r\n\r\n","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage,\r\n    setPageSize,\r\n    UserType,\r\n    toggleIsFetching,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n} from './users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"./users-selectors\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setPageSize: (pageSize: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<any, UsersPropsType> {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    };\r\n\r\n    // onPageChanged = (pageNumber: number) => {\r\n    //     this.props.getUsers(pageNumber)\r\n    // }\r\n\r\n    onPageChanged = (pageNumber: number, pageSizeClick?: number) => {\r\n        const { pageSize } = this.props\r\n        // let page = pageSizeClick ? pageSizeClick : pageSize\r\n        if (!pageSizeClick) {\r\n            this.props.getUsers(pageNumber, pageSize)\r\n        }\r\n        this.props.setPageSize(pageSizeClick)\r\n        this.props.getUsers(pageNumber, pageSizeClick)\r\n    }\r\n\r\n    onShowSizeChanged = (pageNumber: number, pageSize: number) => {\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                // pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                onShowSizeChanged={this.onShowSizeChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        toggleIsFetching,\r\n        setCurrentPage,\r\n        getUsers: requestUsers,\r\n        follow,\r\n        unfollow,\r\n        setPageSize\r\n    })\r\n)(UsersContainer)\r\n","import React, { useState } from 'react';\r\nimport styles from './Music.module.css'\r\n\r\n\r\nfunction Music() {\r\n\r\n    const [switchOnOff, setSwitchOnOff] = useState(false)\r\n\r\n    let url = \"http://streaming.tdiradio.com:8000/house.mp3\";\r\n\r\n    let audio = new Audio(url);\r\n\r\n    const handleOnOffClick = () => {\r\n        if (switchOnOff === false) {\r\n            setSwitchOnOff(true)\r\n            audio.pause()\r\n        } else {\r\n            setSwitchOnOff(false)\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pleer}>\r\n            <div>\r\n                <div className={styles.item}>Radio📻</div>\r\n            </div>\r\n            <button onClick={handleOnOffClick} >\r\n                {\r\n                    switchOnOff ? <h2>⏸️</h2> : <h2>▶️</h2>\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport { FaUserCheck, FaUserMinus } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({ isAuth, login, logout }) => {\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            {\r\n                isAuth ? <FaUserCheck style={{ margin: '4px' }} />\r\n                    : <FaUserMinus style={{ margin: '4px' }} />\r\n            }\r\n            {\r\n                isAuth\r\n                    ? <div>{login} - <button onClick={logout}>Log out</button> </div>\r\n                    : <div><NavLink to='/login' > Login </NavLink> </div>\r\n            }\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header\r\n","\r\nimport { authAPI } from \"../../api/api\";\r\nimport { AppThunkType } from \"../../redux/redux-store\";\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: AuthActionsType): authReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\ntype setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n) =>\r\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } } as const)\r\n\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch) => {\r\n    const res = await authAPI.me();\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha = false): AppThunkType => (dispatch) => {\r\n    return authAPI.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n\r\n}\r\nexport const logout = (): AppThunkType => (dispatch) => {\r\n    return authAPI.logout()\r\n        .then(res => {\r\n            console.log('in then', res)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type AuthActionsType = setAuthUserDataType\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport Header from './Header'\r\nimport { logout } from '../Login/auth-reducer';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any, PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import { getAuthUserData } from '../components/Login/auth-reducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\ntype AppReducerType = typeof initialState\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionsType): AppReducerType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const)\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\nexport type AppActionsType = initializedSuccessType\r\n\r\nexport default appReducer\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"./auth-reducer\";\r\nimport s from './Login.module.css'\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, TextField } from \"@mui/material\";\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [eye, setEye] = useState(true)\r\n    const handleClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true)\r\n        }\r\n    }\r\n\r\n    type ValuesType = {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'maksimkander1@gmail.com',\r\n            password: 'MAKS12345',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<ValuesType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 characters or more';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values: ValuesType) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n    })\r\n\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <Grid item justifyContent={'center'}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl >\r\n                        <div className={s.loginBox}>\r\n                            <div className={s.inputField}>\r\n                                <div className={s.social}> Social-Network</div>\r\n                                <div className={s.signIn}> Sign In</div>\r\n                                <FormGroup className={s.formGroup}>\r\n                                    <p>\r\n                                        <TextField style={{ width: '343px' }} className={s.textField}\r\n                                            label=\"Email\"\r\n                                            margin=\"normal\"\r\n                                            variant=\"standard\"\r\n                                            {...formik.getFieldProps('email')} />\r\n\r\n                                        {\r\n                                            formik.errors.email &&\r\n                                                formik.touched.email ?\r\n                                                <p className={s.error}>{formik.errors.email}</p>\r\n                                                : null\r\n                                        }\r\n                                    </p>\r\n                                    <p>\r\n                                        <TextField style={{ width: '343px' }} className={s.textField}\r\n                                            type={eye ? `password` : 'text'}\r\n                                            label=\"Password\"\r\n                                            margin=\"normal\"\r\n                                            variant=\"standard\"\r\n                                            {...formik.getFieldProps('password')}\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={handleClick}\r\n                                                        >\r\n                                                            {eye ? <VisibilityOff /> : <Visibility />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                        />\r\n\r\n                                        {\r\n                                            formik.errors.password &&\r\n                                                formik.touched.password ?\r\n                                                <p className={s.error}>{formik.errors.password}</p>\r\n                                                : null\r\n                                        }\r\n                                    </p>\r\n                                    <FormControlLabel label={'Remember me'}\r\n                                        control={\r\n                                            <div  >\r\n                                                <Checkbox\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.rememberMe}\r\n                                                    name=\"rememberMe\" />\r\n                                            </div>} />\r\n                                    <button className={s.loginButton}>\r\n                                        Login\r\n                                    </button>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </FormControl>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginForm}>\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, ComponentType, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Music from './components/Music/Music';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport { withRouter } from './hoc/WithRouter'\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { Login } from './components/Login/Login';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\ntype PropsType = {\r\n  initializeApp: () => void\r\n  initialized: boolean\r\n  isAuth: boolean\r\n}\r\n\r\nclass App extends Component<PropsType, PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div\r\n        style={{ position: 'fixed', top: '30%', textAlign: 'center', width: '100%' }}>\r\n        <Preloader />\r\n      </div>\r\n    }\r\n  \r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Suspense fallback={<Preloader />}>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path='/' element={<Navigate to={\"/profile\"} />} />\r\n              <Route path=\"/profile/*\" element={<ProfileContainer />} />\r\n              <Route path=\"/profile/:userId\" element={<ProfileContainer />} />\r\n              <Route path=\"/dialogs/*\" element={<DialogsContainer />} />\r\n              <Route path=\"/users\" element={<UsersContainer />} />\r\n              <Route path=\"/calendar\" element={<Calendar />} />\r\n              <Route path=\"/music\" element={<Music />} />\r\n              <Route path=\"/404\" element={<h1 style={{ textAlign: 'center' }} >404: PAGE NOT FOUND</h1>} />\r\n              <Route path=\"/*\" element={<Navigate to='404' />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n  initialized: state.app.initialized,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter,\r\n)(App)\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionsType, authReducer } from '../components/Login/auth-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionsType } from \"../components/Dialogs/dialogs-reducer\";\r\nimport profileReducer, { ProfileActionsType } from \"../components/Profile/profile-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport appReducer, { AppActionsType } from './app-reducer';\r\nimport usersReducer from '../components/Users/users-reducer';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AllActionsType =\r\n    AppActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | AuthActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { store } from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { ProfileType } from '../components/Profile/profile-reducer';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        // 'API-KEY': 'd885d4a3-64ff-4a70-8cfb-d6db15bc8bae'\r\n        'API-KEY': '92a851fe-fc48-452f-b6b6-b08cb1364d0d'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number, pageSize: number) =>\r\n        instance.get(`users?page=${currentPage}&count=${pageSize}`),\r\n    follow: (id: number) => instance.delete(`follow/${id}`),\r\n\r\n    unfollow: (id: number) => instance.post(`follow/${id}`),\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () => instance.get('auth/me'),\r\n\r\n    login: (email: string, password: string, rememberMe: boolean, captcha = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n\r\n    logout: () => instance.delete(`auth/login`),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfie: (userId: number) => instance.get<ProfileType>(`profile/${userId}`),\r\n\r\n    getStatus: (userId: number) => instance.get(`profile/status/${userId}`),\r\n\r\n    updateStatus: (status: string) => instance.put(`profile/status`, { status }),\r\n\r\n    saveProfilePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__qumOe\",\"loginBox\":\"Login_loginBox__j-A02\",\"inputField\":\"Login_inputField__2TFka\",\"formGroup\":\"Login_formGroup__wG8dF\",\"error\":\"Login_error__HD0v0\",\"social\":\"Login_social__2pqId\",\"signIn\":\"Login_signIn__1SGtm\",\"loginButton\":\"Login_loginButton__1q5R1\"};","import { usersAPI } from \"../../api/api\"\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos?: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>  //array of users ids\r\n};\r\n\r\nexport type UsersReducerType = typeof initialState\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case 'TOGGLE_FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case 'SET_USERS': {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case 'SET_PAGE_SIZE': {\r\n            return { ...state, pageSize: action.page }\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype ActionsType =\r\n    ToggleFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setPageSizeType\r\n    | setUsersTotalCountType\r\n    | toggleIsFetchingType\r\n    | toggleIsFollowingProgressType\r\n\r\ntype ToggleFollowType = ReturnType<typeof toggleFollow>\r\nexport const toggleFollow = (userId: number) =>\r\n    ({ type: 'TOGGLE_FOLLOW', userId } as const)\r\n\r\ntype toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const)\r\n\r\ntype toggleIsFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (userId: number, isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FOLLOWING_PROGRESS', userId, isFetching } as const)\r\n\r\ntype setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({ type: 'SET_USERS', users } as const)\r\n\r\ntype setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) =>\r\n    ({ type: 'SET_CURRENT_PAGE', page } as const)\r\n\r\ntype setPageSizeType = ReturnType<typeof setPageSize>\r\nexport const setPageSize = (page: number) =>\r\n    ({ type: 'SET_PAGE_SIZE', page } as const)\r\n\r\ntype setUsersTotalCountType = ReturnType<typeof setUsersTotalCount>\r\nexport const setUsersTotalCount = (totalUsersCount: number) =>\r\n    ({ type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const)\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    const res = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(res.data.items));\r\n    dispatch(setUsersTotalCount(res.data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any) => {\r\n    dispatch(toggleFollowingProgress(id, true))\r\n    const res = await apiMethod(id)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(toggleFollow(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(id, false))\r\n}\r\n\r\nexport const follow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\nexport const unfollow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fll_\",\"item\":\"Navbar_item__166Pj\"};","import s from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.ldsspinner}   ><div></div><div></div><div></div>\r\n            <div></div><div></div><div></div><div></div><div></div>\r\n            <div></div><div></div><div> </div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n"],"sourceRoot":""}