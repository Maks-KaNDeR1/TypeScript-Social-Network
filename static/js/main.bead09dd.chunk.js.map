{"version":3,"sources":["components/Users/state/users-reducer.ts","components/common/Preloader/Preloader.tsx","components/Users/User/user.module.css","components/Users/users.module.css","components/Music/Music.module.css","components/Header/Header.module.css","assets/images/user.png","hoc/WithRouter.tsx","components/Dialogs/dialogs-reducer.ts","components/Profile/state/profile-reducer.ts","api/chat-api.ts","pages/Chat/chat-reducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.tsx","components/Calendar/Calendar.tsx","components/Users/User/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/state/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Music/Music.tsx","components/Header/Header.tsx","components/Login/auth-reducer.ts","components/Header/HeaderContainer.tsx","redux/app-reducer.ts","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","api/api.ts","components/Users/state/actions.ts","components/Login/Login.module.css","components/Profile/state/actions.ts","components/Navbar/Navbar.module.css"],"names":["initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","filter","term","friend","requestUsers","page","dispatch","a","toggleIsFetching","setCurrentPage","setFilter","usersAPI","getUsers","res","setUsers","data","items","setUsersTotalCount","totalCount","_followUnfollowFlow","id","apiMethod","toggleFollowingProgress","resultCode","toggleFollow","follow","bind","unfollow","usersReducer","state","action","type","map","u","userId","followed","payload","Preloader","className","s","ldsspinner","module","exports","withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","ADD_MESSAGE","dialogs","name","src","message","avatar","time","addMessage","title","dialogsReducer","rand","Math","floor","random","length","min","Date","getMinutes","newMessage","posts","likesCount","newPostText","profile","status","getUserProfile","profileAPI","getUserProfie","setUserProfile","getStatus","setStatus","updateStatus","savePhoto","photos","getState","auth","saveProfilePhoto","saveProfile","Promise","reject","messages","profileReducer","UPDATE_NEW_POST_TEXT","newText","SET_USER_PROFILE","SET_STATUS","ADD_POST","newPost","DELETE_POST","p","postId","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","actions","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","m","v1","index","array","styleIcon","color","Navbar","nav","item","style","to","CalendarComponent","fullscreen","headerRender","value","onChange","onTypeChange","monthOptions","current","clone","localeData","months","i","month","monthsShort","Option","year","options","padding","Title","level","gutter","Group","size","target","Button","dropdownMatchSelectWidth","newYear","now","Number","String","selectedMonth","newValue","parseInt","onPanelChange","mode","log","format","User","user","followOrUnfollowButton","followOrUnfollow","gradientButton","disabled","some","onClick","margin","fontSize","userBlock","small","userPhoto","alt","usersSearchFormValidate","values","UsersSearchForm","React","memo","initialValues","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","htmlType","Users","onPageChanged","menu","showQuickJumper","showSizeChanger","defaultCurrent","total","defaultPageSize","pageSizeOptions","usersBlock","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersContainer","pageNumber","setPageSize","this","compose","connect","Music","useState","switchOnOff","setSwitchOnOff","audio","Audio","styles","pleer","pause","play","Header","isAuth","login","logout","header","loginBlock","SET_USER_DATA","email","authReducer","setAuthUserData","getAuthUserData","authAPI","me","HeaderContainer","then","INITIALIZED_SUCCESS","initialized","appReducer","LoginForm","useDispatch","eye","setEye","formik","useFormik","password","rememberMe","errors","test","captcha","loginTC","Grid","container","justifyContent","handleSubmit","FormControl","loginBox","inputField","social","signIn","FormGroup","formGroup","TextField","width","textField","label","variant","getFieldProps","touched","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","FormControlLabel","control","Checkbox","handleChange","loginButton","Login","useSelector","loginForm","DialogsContainer","lazy","ProfileContainer","ChatPage","App","initializeApp","fallback","path","element","textAlign","top","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","dialogsPage","profilePage","chat","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","put","photoFile","formData","FormData","append","addPost","updateNewPostText","text"],"mappings":"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","file":"static/js/main.bead09dd.chunk.js","sourcesContent":["import { Dispatch } from \"redux\"\r\nimport { usersAPI } from \"../../../api/api\"\r\nimport { setCurrentPage, setFilter, setUsers, setUsersTotalCount, toggleFollow, toggleFollowingProgress, toggleIsFetching, UsersActionsType } from \"./actions\"\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos?: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,  //array of users ids\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\nexport type UsersReducerType = typeof initialState\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: UsersActionsType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/TOGGLE_FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case 'SN/USERS/SET_PAGE_SIZE': {\r\n            return { ...state, pageSize: action.page }\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return { ...state, filter: action.payload }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(setFilter(filter))\r\n    const res = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(res.data.items));\r\n    dispatch(setUsersTotalCount(res.data.totalCount));\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch, id: number, apiMethod: any) => {\r\n    dispatch(toggleFollowingProgress(id, true))\r\n    const res = await apiMethod(id)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(toggleFollow(id))\r\n    }\r\n    dispatch(toggleFollowingProgress(id, false))\r\n}\r\n\r\nexport const follow = (id: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    _followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\nexport const unfollow = (id: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    _followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\n\r\nexport type FilterType = typeof initialState.filter\r\n\r\n\r\nexport default usersReducer\r\n","import s from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.ldsspinner}   ><div></div><div></div><div></div>\r\n            <div></div><div></div><div></div><div></div><div></div>\r\n            <div></div><div></div><div> </div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"user_userPhoto__RrrGk\",\"userBlock\":\"user_userBlock__2HiZf\",\"gradientButton\":\"user_gradientButton__3tfXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"users_usersBlock__ZeHVP\",\"menu\":\"users_menu__33h5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pleer\":\"Music_pleer__2ayyf\",\"item\":\"Music_item__1eXWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H_o5P\"};","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","\r\nimport React, { ComponentType } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n    function ComponentWithRouterProp(props: T) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n }\r\n \r\n","\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        { id: 1, name: 'Chat Samurais', src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRvLFYUQ95QJAS0zyVxBrUHL9-np7kR4ueKXYpnAOBCBczReCLa6G4nheqPrt6naYSO2Pw&usqp=CAU' },\r\n        { id: 2, name: 'Sonechka', src: 'https://sun2-10.userapi.com/s/v1/if1/w1y1anZFpf-CNhV-lyM8U6QCcnKkY164nwL0HkaM1FCU6CxDm4dQ3F0i9yR8ib5JCojY2P7X.jpg?size=100x0&quality=96&crop=58,0,339,339&ava=1' },\r\n        { id: 3, name: 'Maks', src: 'https://sun2-4.userapi.com/s/v1/ig2/tmGqC7l6DkVdw8p1o8raCVmvPtRmFeWjVODUXOn8ClIXSBpLUKtcascbdMK0i0qBhTs0aXgP7qSj-evbmXNdcL9X.jpg?size=100x0&quality=96&crop=26,6,1580,1580&ava=1' },\r\n        { id: 4, name: 'Dimych', src: 'https://sun2-4.userapi.com/s/v1/if1/WKIru_JWpP_NC33uxlLNSzN_FCVYF2ATJmiCUPBesjXHmmhm6r9zUDFCO0ewZ2F-RZC9qFYz.jpg?size=50x0&quality=96&crop=322,289,1006,1006&ava=1' },\r\n        { id: 5, name: 'Masha', src: 'https://sun2-3.userapi.com/s/v1/ig1/ZEoKnBuJ0WePJx9izTmq4QNH657mCi5IPIfuxZJGyaz-kWOF-CrCBqKT6FRZHfZ16xZsqYT7.jpg?size=100x0&quality=96&crop=160,0,759,759&ava=1' },\r\n        { id: 6, name: 'Ulya', src: 'https://sun2-3.userapi.com/s/v1/ig2/lxJkYCHND2QJIj6Y6CiLOIZn64fKd1lp2_pkoHGcLhi5ugP7zsKEcKpDSDVkWFsVWk_9JWws4VdRK05CIAZns7-j.jpg?size=100x0&quality=96&crop=0,274,1215,1215&ava=1' },\r\n        { id: 7, name: 'Ustina', src: 'https://sun9-59.userapi.com/impf/Xr5HIhSHG2Xn-b6EXFY0x1KMNfa5VpmofbNzlQ/cS6GLKimqdg.jpg?size=1080x1080&quality=96&sign=e702e7ebd20a8cddfbebd77957c00ecc&type=album' },\r\n        { id: 8, name: 'Sasha', src: 'https://sun2-9.userapi.com/s/v1/ig2/k-NYQ6bwT9zwVHoWsY9mEW35tf56gqKIZSogiC5qcE32xOlTKCMvn3poYzyhEn0fKrStu2jhWt6di522b1IjrWHb.jpg?size=100x0&quality=96&crop=12,12,200,200&ava=1' },\r\n        { id: 9, name: 'Vova', src: 'https://sun2-4.userapi.com/s/v1/ig1/X2AsqRo-dhkjrmbPk2fwjAJjQipXwXvaGtQFw42mSpDrZUYK5pR5AiM6HUwJktqkET6WctPB.jpg?size=100x0&quality=96&crop=615,256,588,588&ava=1' }\r\n    ] as Array<DialogsType>,\r\n    message: [\r\n        {\r\n            id: 1, avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n            name: 'Sasha', message: 'Hello, my friends', time: '22:00'\r\n        },\r\n        {\r\n            id: 24185, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n            name: 'Maksim', message: 'Hi all', time: '22:07'\r\n        },\r\n        {\r\n            id: 3, avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\r\n            name: 'Sonya', message: 'yo yo yo', time: '22:15'\r\n        },\r\n        {\r\n            id: 4, avatar: 'https://top-tok.ru/wp-content/uploads/e8a52fc5-620c-4d7c-8f34-ddd8f605f95a.jpg',\r\n            name: 'Natali', message: 'How a you?', time: '22:17'\r\n        },\r\n        {\r\n            id: 24185, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n            name: 'Maksim', message: 'Everything is fine', time: '22:18'\r\n        },\r\n        {\r\n            id: 6, avatar: 'https://i.pinimg.com/originals/38/20/44/382044ab16b8772d62a6043dc202bd86.jpg',\r\n            name: 'Galya', message: 'What do you do', time: '22:19'\r\n        },\r\n        {\r\n            id: 7, avatar: 'https://papik.pro/uploads/posts/2022-01/thumbs/1642409371_29-papik-pro-p-gacha-stikeri-31.jpg',\r\n            name: 'Dima', message: 'I went out for a walk', time: '22:19'\r\n        },\r\n        {\r\n            id: 8, avatar: 'https://yt3.ggpht.com/a/AATXAJwg1JVXn5R_VJH_tSFHvGrBbwGEfEW0yDUBAgDkag=s900-c-k-c0xffffffff-no-rj-mo',\r\n            name: 'Alina', message: 'I will sleep', time: '22:23'\r\n        }\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: DialogsActionsType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            const rand = Math.floor(Math.random() * state.message.length)\r\n            let min = new Date().getMinutes()\r\n\r\n            let newMessage: MessageType = {\r\n                id: 9,\r\n                avatar: state.message[rand].avatar,\r\n                name: state.message[rand].name,\r\n                message: action.title,\r\n                time: '15 :' + min\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                message: [...state.message, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype addMessageType = ReturnType<typeof addMessage>\r\nexport const addMessage = (title: string) => ({ type: ADD_MESSAGE, title } as const)\r\n\r\n\r\nexport type DialogsActionsType = addMessageType\r\n\r\n\r\nexport default dialogsReducer","import { profileAPI } from \"../../../api/api\"\r\nimport { AppThunkType } from \"../../../redux/redux-store\"\r\nimport {\r\n    ProfileActionsType,\r\n    setStatus,\r\n    setUserProfile,\r\n    ADD_POST,\r\n    DELETE_POST,\r\n    SET_STATUS,\r\n    SET_USER_PROFILE,\r\n    UPDATE_NEW_POST_TEXT\r\n} from \"./actions\"\r\n\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype PhotosType = {\r\n    small?: string\r\n    large?: string\r\n}\r\n\r\nexport type ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n\r\n}\r\n\r\nexport type initialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    status: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Yo\", likesCount: 23 },\r\n        { id: 2, message: \"I'm in to IT\", likesCount: 12 },\r\n        { id: 3, message: \"I'\", likesCount: 57 },\r\n        { id: 4, message: \"I'm a BOSS\", likesCount: 23 }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.newText }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const getUserProfile = (userId: number | null): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getUserProfie(userId)\r\n    dispatch(setUserProfile(res.data));\r\n}\r\n\r\nexport const getStatus = (userId: number): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (photos: File): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const res = await profileAPI.saveProfilePhoto(photos)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (profile: ProfileType): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const res = await profileAPI.saveProfile(profile);\r\n\r\n    if (res.data.resultCode === 0) {\r\n        // dispatch(getUserProfile(userId));\r\n    } else {\r\n        return Promise.reject(res.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\n","import { Dispatch } from 'redux'\r\nimport { v1 } from 'uuid'\r\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../../api/chat-api'\r\nimport { AppThunkType, InferActionsTypes } from '../../redux/redux-store'\r\n\r\ntype ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/chat/MESSAGES_RECEVIED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages.map((m: any) => ({ ...m, id: v1() }))]\r\n                    .filter((m, index, array) => index >= array.length - 100)\r\n            }\r\n        case 'SN/chat/STATUS_CHANGED':\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\r\n        type: 'SN/chat/MESSAGES_RECEVIED', payload: { messages }\r\n    } as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: 'SN/chat/STATUS_CHANGED', payload: { status }\r\n    } as const)\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(actions.messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = (): AppThunkType => async (dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = (): AppThunkType => async (dispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string): AppThunkType => async (dispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatReducer\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n// type ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsspinner\":\"Preloader_ldsspinner__2ajmc\",\"lds-spinner\":\"Preloader_lds-spinner__2eR9q\"};","import React from 'react'\r\nimport { FaCogs, FaFacebookMessenger, FaMusic, FaRegCalendarAlt, FaRegUserCircle, FaUsers } from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.item} >\r\n                <FaRegUserCircle style={styleIcon} />\r\n                <NavLink to=\"/profile/\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaFacebookMessenger style={styleIcon} />\r\n                <NavLink to=\"/dialogs/\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaFacebookMessenger style={styleIcon} />\r\n                <NavLink to=\"/chat/\">Chat</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaMusic style={styleIcon} />\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaUsers style={styleIcon} />\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaCogs style={styleIcon} />\r\n                <NavLink to=\"/setting\">Setting</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <FaRegCalendarAlt style={styleIcon} />\r\n                <NavLink to=\"/calendar\">Сalendar</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet styleIcon: React.CSSProperties = {\r\n    color: 'rgb(56, 0, 0)'\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import { Calendar, Col, Radio, Row, Select, Typography } from 'antd';\r\nimport type { CalendarMode } from 'antd/lib/calendar/generateCalendar';\r\nimport type { Moment } from 'moment';\r\nimport React from 'react';\r\nimport './Calendar.css';\r\n\r\nexport const CalendarComponent: React.FC = () => {\r\n    const onPanelChange = (value: Moment, mode: CalendarMode) => {\r\n        console.log(value.format('YYYY-MM-DD'), mode);\r\n    };\r\n\r\n    return (\r\n        <div className=\"site-calendar-customize-header-wrapper\">\r\n            <Calendar\r\n                fullscreen={false}\r\n                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n                    const start = 0;\r\n                    const end = 12;\r\n                    const monthOptions = [];\r\n\r\n                    const current = value.clone();\r\n                    const localeData = value.localeData();\r\n                    const months = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                        current.month(i);\r\n                        months.push(localeData.monthsShort(current));\r\n                    }\r\n\r\n                    for (let index = start; index < end; index++) {\r\n                        monthOptions.push(\r\n                            <Select.Option className=\"month-item\" key={`${index}`}>\r\n                                {months[index]}\r\n                            </Select.Option>,\r\n                        );\r\n                    }\r\n                    const month = value.month();\r\n\r\n                    const year = value.year();\r\n                    const options = [];\r\n                    for (let i = year - 10; i < year + 10; i += 1) {\r\n                        options.push(\r\n                            <Select.Option key={i} value={i} className=\"year-item\">\r\n                                {i}\r\n                            </Select.Option>,\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div style={{ padding: 8 }}>\r\n                            <Typography.Title level={4}>Calendar</Typography.Title>\r\n                            <Row gutter={8}>\r\n                                <Col>\r\n                                    <Radio.Group\r\n                                        size=\"small\"\r\n                                        onChange={e => onTypeChange(e.target.value)}\r\n                                        value={type}\r\n                                    >\r\n                                        <Radio.Button value=\"month\">Month</Radio.Button>\r\n                                        <Radio.Button value=\"year\">Year</Radio.Button>\r\n                                    </Radio.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select\r\n                                        size=\"small\"\r\n                                        dropdownMatchSelectWidth={false}\r\n                                        className=\"my-year-select\"\r\n                                        onChange={newYear => {\r\n                                            const now = value.clone().year(Number(newYear));\r\n                                            onChange(now);\r\n                                        }}\r\n                                        value={String(year)}\r\n                                    >\r\n                                        {options}\r\n                                    </Select>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select\r\n                                        size=\"small\"\r\n                                        dropdownMatchSelectWidth={false}\r\n                                        value={String(month)}\r\n                                        onChange={selectedMonth => {\r\n                                            const newValue = value.clone();\r\n                                            newValue.month(parseInt(selectedMonth, 10));\r\n                                            onChange(newValue);\r\n                                        }}\r\n                                    >\r\n                                        {monthOptions}\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    );\r\n                }}\r\n                onPanelChange={onPanelChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","\r\nimport React from 'react';\r\nimport s from './user.module.css';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport { UserType } from '../state/users-reducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollow, follow }) => {\r\n\r\n    const followOrUnfollowButton = (followOrUnfollow: (id: number) => void, title: string) => {\r\n        return <>\r\n            <button\r\n                className={s.gradientButton}\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => { followOrUnfollow(user.id) }}\r\n            >\r\n                {followingInProgress.some(id => id === user.id) && (\r\n                    <i\r\n                        className=\"fa fa-refresh fa-spin\"\r\n                        style={{ margin: \"1px 2px 0 1px\", fontSize: \"12px\" }}\r\n                    />\r\n                )} {title} </button>\r\n        </>\r\n    }\r\n\r\n    return <div className={s.userBlock}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`} >\r\n                    <img src={user.photos?.small != null ? user.photos?.small : userPhoto}\r\n                        className={s.userPhoto} alt='profilePhoto' />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? followOrUnfollowButton(follow, 'Unfollow')\r\n                    : followOrUnfollowButton(unfollow, 'Follow')\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status || <br />} </div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n","import { Button } from 'antd'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport React from 'react'\r\nimport { FilterType } from './state/users-reducer'\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const submit = (values: any, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            initialValues={{ term: '', friend: 'null' }}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" />\r\n\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <Button type='default' htmlType=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})","import React from 'react';\r\nimport { UserType } from './state/users-reducer';\r\nimport s from './users.module.css';\r\nimport User from './User/User';\r\nimport type { PaginationProps } from 'antd';\r\nimport { Pagination } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { UsersSearchForm } from './UsersSearchForm'\r\nimport { FilterType } from './state/users-reducer'\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number, pageSize?: number) => void\r\n    onFilterChanged: (filter: FilterType) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (\r\n    {\r\n        users, currentPage, totalUsersCount, onPageChanged, onFilterChanged,\r\n        ...props\r\n    }) => {\r\n\r\n\r\n    const onChange: PaginationProps['onChange'] = (page, pageSize) => {\r\n        onPageChanged(page, pageSize);\r\n    };\r\n\r\n\r\n    return <div>\r\n        <div className={s.menu}>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n            <br />\r\n            <Pagination\r\n                showQuickJumper\r\n                onChange={onChange}\r\n                showSizeChanger\r\n                defaultCurrent={1}\r\n                total={totalUsersCount}\r\n                defaultPageSize={15}\r\n                pageSizeOptions={[15, 30, 60, 90]}\r\n            />\r\n        </div>\r\n\r\n        <div className={s.usersBlock} >\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"../../../redux/redux-store\";\r\nimport { UserType } from \"./users-reducer\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users: Array<UserType>) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage;\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress;\r\n\r\nexport const getUsersFilter = (state: AppRootStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage,\r\n    setPageSize,\r\n    toggleIsFetching,\r\n} from './state/actions';\r\nimport {\r\n    requestUsers,\r\n    follow,\r\n    unfollow,\r\n    UserType,\r\n    FilterType\r\n} from './state/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"./state/users-selectors\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setPageSize: (pageSize: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<any, UsersPropsType> {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize, filter } = this.props\r\n        this.props.getUsers(currentPage, pageSize, filter)\r\n    };\r\n\r\n\r\n    onPageChanged = (pageNumber: number, pageSize?: number) => {\r\n        // const { pageSize } = this.props\r\n        // if (!pageSizeClick) {\r\n        //     this.props.getUsers(pageNumber, pageSize)\r\n        // }\r\n        const { filter } = this.props\r\n        this.props.setPageSize(pageSize)\r\n        this.props.getUsers(pageNumber, pageSize, filter)\r\n    }\r\n\r\n    onFilterChanged = (filter: FilterType) => {\r\n        const { pageSize } = this.props\r\n        this.props.getUsers(1, pageSize, filter)\r\n    }\r\n\r\n    render() {\r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                onFilterChanged={this.onFilterChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    filter: getUsersFilter(state)\r\n})\r\n\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        toggleIsFetching,\r\n        setCurrentPage,\r\n        getUsers: requestUsers,\r\n        follow,\r\n        unfollow,\r\n        setPageSize\r\n    })\r\n)(UsersContainer)\r\n","import React, { useState } from 'react';\r\nimport styles from './Music.module.css'\r\n\r\n\r\nfunction Music() {\r\n\r\n    const [switchOnOff, setSwitchOnOff] = useState(false)\r\n\r\n    let url = \"http://streaming.tdiradio.com:8000/house.mp3\";\r\n\r\n    let audio = new Audio(url);\r\n\r\n    const handleOnOffClick = () => {\r\n        if (switchOnOff === false) {\r\n            setSwitchOnOff(true)\r\n            audio.pause()\r\n        } else {\r\n            setSwitchOnOff(false)\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pleer}>\r\n            <div>\r\n                <div className={styles.item}>Radio📻</div>\r\n            </div>\r\n            <button onClick={handleOnOffClick} >\r\n                {\r\n                    switchOnOff ? <h2>⏸️</h2> : <h2>▶️</h2>\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport { FaUserCheck, FaUserMinus } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({ isAuth, login, logout }) => {\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            {\r\n                isAuth ? <FaUserCheck style={{ margin: '4px' }} />\r\n                    : <FaUserMinus style={{ margin: '4px' }} />\r\n            }\r\n            {\r\n                isAuth\r\n                    ? <div>{login} - <button onClick={logout}>Log out</button> </div>\r\n                    : <div><NavLink to='/login' > Login </NavLink> </div>\r\n            }\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header\r\n","\r\nimport { authAPI } from \"../../api/api\";\r\nimport { AppThunkType } from \"../../redux/redux-store\";\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: AuthActionsType): authReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\ntype setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n) =>\r\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } } as const)\r\n\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch) => {\r\n    const res = await authAPI.me();\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha = false): AppThunkType => (dispatch) => {\r\n    return authAPI.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n\r\n}\r\nexport const logout = (): AppThunkType => (dispatch) => {\r\n    return authAPI.logout()\r\n        .then(res => {\r\n            console.log('in then', res)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type AuthActionsType = setAuthUserDataType\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport Header from './Header'\r\nimport { logout } from '../Login/auth-reducer';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any, PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import { getAuthUserData } from '../components/Login/auth-reducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\ntype AppReducerType = typeof initialState\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionsType): AppReducerType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const)\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\nexport type AppActionsType = initializedSuccessType\r\n\r\nexport default appReducer\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"./auth-reducer\";\r\nimport s from './Login.module.css'\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, TextField } from \"@mui/material\";\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [eye, setEye] = useState(true)\r\n    const handleClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true)\r\n        }\r\n    }\r\n\r\n    type ValuesType = {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'maksimkander1@gmail.com',\r\n            password: 'MAKS12345',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<ValuesType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 characters or more';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values: ValuesType) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n    })\r\n\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <Grid item justifyContent={'center'}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl >\r\n                        <div className={s.loginBox}>\r\n                            <div className={s.inputField}>\r\n                                <div className={s.social}> Social-Network</div>\r\n                                <div className={s.signIn}> Sign In</div>\r\n                                <FormGroup className={s.formGroup}>\r\n                                    <p>\r\n                                        <TextField style={{ width: '343px' }} className={s.textField}\r\n                                            label=\"Email\"\r\n                                            margin=\"normal\"\r\n                                            variant=\"standard\"\r\n                                            {...formik.getFieldProps('email')} />\r\n\r\n                                        {\r\n                                            formik.errors.email &&\r\n                                                formik.touched.email ?\r\n                                                <p className={s.error}>{formik.errors.email}</p>\r\n                                                : null\r\n                                        }\r\n                                    </p>\r\n                                    <p>\r\n                                        <TextField style={{ width: '343px' }} className={s.textField}\r\n                                            type={eye ? `password` : 'text'}\r\n                                            label=\"Password\"\r\n                                            margin=\"normal\"\r\n                                            variant=\"standard\"\r\n                                            {...formik.getFieldProps('password')}\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={handleClick}\r\n                                                        >\r\n                                                            {eye ? <VisibilityOff /> : <Visibility />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                        />\r\n\r\n                                        {\r\n                                            formik.errors.password &&\r\n                                                formik.touched.password ?\r\n                                                <p className={s.error}>{formik.errors.password}</p>\r\n                                                : null\r\n                                        }\r\n                                    </p>\r\n                                    <FormControlLabel label={'Remember me'}\r\n                                        control={\r\n                                            <div  >\r\n                                                <Checkbox\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.rememberMe}\r\n                                                    name=\"rememberMe\" />\r\n                                            </div>} />\r\n                                    <button className={s.loginButton}>\r\n                                        Login\r\n                                    </button>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </FormControl>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginForm}>\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, ComponentType, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { CalendarComponent } from './components/Calendar/Calendar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Music from './components/Music/Music';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport { withRouter } from './hoc/WithRouter'\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { Login } from './components/Login/Login';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst ChatPage = React.lazy(() => import('./pages/Chat/ChatPage'))\r\n\r\ntype PropsType = {\r\n  initializeApp: () => void\r\n  initialized: boolean\r\n  isAuth: boolean\r\n}\r\n\r\nclass App extends Component<PropsType, PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div\r\n        style={{ position: 'fixed', top: '30%', textAlign: 'center', width: '100%' }}>\r\n        <Preloader />\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Suspense fallback={<Preloader />}>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path='/' element={<Navigate to={\"/profile\"} />} />\r\n              <Route path=\"/profile/*\" element={<ProfileContainer />} />\r\n              <Route path=\"/profile/:userId\" element={<ProfileContainer />} />\r\n              <Route path=\"/dialogs/*\" element={<DialogsContainer />} />\r\n              <Route path='/chat' element={<ChatPage />} />\r\n              <Route path=\"/users\" element={<UsersContainer />} />\r\n              <Route path=\"/calendar\" element={<CalendarComponent />} />\r\n              <Route path=\"/music\" element={<Music />} />\r\n              <Route path=\"/404\" element={<h1 style={{ textAlign: 'center' }} >404: PAGE NOT FOUND</h1>} />\r\n              <Route path=\"/*\" element={<Navigate to='404' />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n  initialized: state.app.initialized,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter,\r\n)(App)\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionsType, authReducer } from '../components/Login/auth-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionsType } from \"../components/Dialogs/dialogs-reducer\";\r\nimport profileReducer from \"../components/Profile/state/profile-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport appReducer, { AppActionsType } from './app-reducer';\r\nimport usersReducer from '../components/Users/state/users-reducer';\r\nimport chatReducer from '../pages/Chat/chat-reducer';\r\nimport { ProfileActionsType } from '../components/Profile/state/actions';\r\nimport { UsersActionsType } from '../components/Users/state/actions';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    chat: chatReducer\r\n})\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AllActionsType =\r\n    AppActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | AuthActionsType\r\n    | UsersActionsType\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { store } from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { ProfileType } from '../components/Profile/state/profile-reducer';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        // 'API-KEY': 'd885d4a3-64ff-4a70-8cfb-d6db15bc8bae'\r\n        'API-KEY': '92a851fe-fc48-452f-b6b6-b08cb1364d0d'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage: number, pageSize: number, term: string = '', friend: null | boolean = null) =>\r\n        instance.get(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`)),\r\n    follow: (id: number) => instance.delete(`follow/${id}`),\r\n\r\n    unfollow: (id: number) => instance.post(`follow/${id}`),\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () => instance.get('auth/me'),\r\n\r\n    login: (email: string, password: string, rememberMe: boolean, captcha = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n\r\n    logout: () => instance.delete(`auth/login`),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfie: (userId: number | null) => instance.get<ProfileType>(`profile/${userId}`),\r\n\r\n    getStatus: (userId: number) => instance.get(`profile/status/${userId}`),\r\n\r\n    updateStatus: (status: string) => instance.put(`profile/status`, { status }),\r\n\r\n    saveProfilePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\n","import { FilterType, UserType } from \"./users-reducer\"\r\n\r\n\r\nexport const toggleFollow = (userId: number) =>\r\n    ({ type: 'SN/USERS/TOGGLE_FOLLOW', userId } as const)\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({ type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching } as const)\r\n\r\nexport const toggleFollowingProgress = (userId: number, isFetching: boolean) =>\r\n    ({ type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', userId, isFetching } as const)\r\n\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({ type: 'SN/USERS/SET_USERS', users } as const)\r\n\r\nexport const setCurrentPage = (page: number) =>\r\n    ({ type: 'SN/USERS/SET_CURRENT_PAGE', page } as const)\r\n\r\nexport const setFilter = (filter: FilterType) =>\r\n    ({ type: 'SN/USERS/SET_FILTER', payload: filter } as const)\r\n\r\nexport const setPageSize = (page: number) =>\r\n    ({ type: 'SN/USERS/SET_PAGE_SIZE', page } as const)\r\n\r\nexport const setUsersTotalCount = (totalUsersCount: number) =>\r\n    ({ type: 'SN/USERS/SET_TOTAL_USERS_COUNT', totalUsersCount } as const)\r\n\r\n\r\n\r\nexport type UsersActionsType =\r\n    | ReturnType<typeof toggleFollow>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setPageSize>\r\n    | ReturnType<typeof setUsersTotalCount>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__qumOe\",\"loginBox\":\"Login_loginBox__j-A02\",\"inputField\":\"Login_inputField__2TFka\",\"formGroup\":\"Login_formGroup__wG8dF\",\"error\":\"Login_error__HD0v0\",\"social\":\"Login_social__2pqId\",\"signIn\":\"Login_signIn__1SGtm\",\"loginButton\":\"Login_loginButton__1q5R1\"};","import { ProfileType } from \"./profile-reducer\"\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\n\r\nexport const addPost = () => ({ type: ADD_POST } as const)\r\n\r\nexport const updateNewPostText = (text: string) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\r\n\r\nexport const setUserProfile = (profile: ProfileType) =>\r\n    ({ type: SET_USER_PROFILE, profile } as const)\r\n\r\nexport const setStatus = (status: string) =>\r\n    ({ type: SET_STATUS, status } as const)\r\n\r\nexport const deletePost = (postId: number) =>\r\n    ({ type: DELETE_POST, postId } as const)\r\n\r\n\r\nexport type ProfileActionsType =\r\n    | ReturnType<typeof addPost>\r\n    | ReturnType<typeof updateNewPostText>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fll_\",\"item\":\"Navbar_item__166Pj\"};"],"sourceRoot":""}