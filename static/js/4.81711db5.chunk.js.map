{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AlternativeMessage/AlternativeMessage.module.css","../node_modules/@mui/icons-material/Send.js","components/Dialogs/DialodsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AlternativeMessage/AlternativeMessage.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","DialogItem","id","name","src","path","className","styles","dialog","active","alt","to","Message","avatar","message","time","s","displaySent","style","justifyContent","description","borderRadius","nameSent","textSent","timeSent","angleSent","display","angle","text","AlternativeMessage","addMessage","scroll","useState","title","setTitle","onClickHandler","trim","setTimeout","current","scrollIntoView","behavior","items","type","placeholder","onChange","event","currentTarget","onKeyPress","e","charCode","cursor","marginBottom","onClick","Dialogs","dialogs","dialogsElements","map","messageElements","m","React","useRef","dialogsItems","dialogF","overflow","height","WebkitOverflowScrolling","ref","margin","marginLeft","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","connect","compose","withAuthRedirect","dialogsPage"],"mappings":"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","file":"static/js/4.81711db5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__6rxj1\",\"dialogsItems\":\"Dialogs_dialogsItems__3gA3l\",\"active\":\"Dialogs_active__2MX0L\",\"dialog\":\"Dialogs_dialog__EU5iR\",\"messages\":\"Dialogs_messages__9dv1e\",\"message\":\"Dialogs_message__1aPDA\",\"dialogF\":\"Dialogs_dialogF__NiBx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Message_display__1EHVd\",\"message\":\"Message_message__ABkZL\",\"description\":\"Message_description__3trQ6\",\"angle\":\"Message_angle__2v-k7\",\"angleSent\":\"Message_angleSent__1R_z6\",\"name\":\"Message_name__2eLj0\",\"text\":\"Message_text__2Dm9O\",\"time\":\"Message_time__1ODfc\",\"nameSent\":\"Message_nameSent__2sRcT\",\"textSent\":\"Message_textSent__2-uh7\",\"timeSent\":\"Message_timeSent__1bH7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"AlternativeMessage_items__3Zmak\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import { NavLink } from 'react-router-dom'\r\nimport styles from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\n\r\nconst DialogItem: React.FC<PropsType> = ({ id, name, src }) => {\r\n\r\n    const path = \"/dialogs/\" + id;\r\n\r\n    return (\r\n        <div className={styles.dialog + ' ' + styles.active}>\r\n            <img src={src} alt='ava' />\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem\r\n\r\n\r\n","import s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    id?: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\n\r\nconst Message: React.FC<PropsType> = ({ id, avatar, name, message, time }) => {\r\n    if (name === 'Maksim') {\r\n        return (\r\n            <div className={s.displaySent}>\r\n                <div className={s.message} style={{  justifyContent: 'flex-end'}} >                \r\n                    <div className={s.description} style={{ borderRadius: '26px 28px 0 26px' }}>\r\n                        <div className={s.nameSent}>{name}</div>\r\n                        <div className={s.textSent}>{message}</div>\r\n                        <span className={s.timeSent}>{time}</span>\r\n                    </div>\r\n\r\n                    <div className={s.angleSent} />\r\n\r\n                    <img src={avatar} alt={'avatar'} />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={s.display}>\r\n                <div className={s.message}>\r\n                    <img src={avatar} alt={'avatar'} />\r\n\r\n                    <div className={s.angle} />\r\n\r\n                    <div className={s.description}>\r\n                        <div className={s.name}>{name}</div>\r\n                        <div className={s.text}>{message}</div>\r\n                        <span className={s.time}>{time}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Message\r\n\r\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\r\nimport s from './AlternativeMessage.module.css'\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\ntype PropsType = {\r\n    addMessage: (title: string) => void\r\n    scroll: any\r\n}\r\n\r\nconst AlternativeMessage: React.FC<PropsType> = ({ addMessage, scroll }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const onClickHandler = () => {\r\n        if (title.trim() !== '') {\r\n            addMessage(title)\r\n            setTitle('')\r\n            setTimeout(() => {\r\n                scroll.current.scrollIntoView({ behavior: 'smooth' })\r\n            }, 0)\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.items} >\r\n            <input type='text'\r\n                placeholder=' New message...'\r\n                value={title}\r\n                onChange={onChangeHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n            <SendIcon style={{ cursor: 'pointer', marginBottom: '-6px' }} onClick={onClickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AlternativeMessage\r\n","\r\nimport React from 'react'\r\nimport DialogItem from './DialodsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport s from './Dialogs.module.css'\r\nimport { DialogsType, MessageType } from '../../redux/dialogs-reducer';\r\nimport AlternativeMessage from './AlternativeMessage/AlternativeMessage';\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n    addMessage: () => void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = ({addMessage, dialogs, message}) => {\r\n\r\n    const dialogsElements = dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id} src={d.src} />\r\n    )\r\n\r\n    const messageElements = message.map(m =>\r\n        <Message key={m.id}\r\n            id={m.id} avatar={m.avatar} name={m.name} message={m.message} time={m.time}\r\n        />\r\n    )\r\n\r\n//#002733;\r\n    const scroll = React.useRef(null)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.dialogF} style={{ overflow: 'auto', height: '500px', WebkitOverflowScrolling: \"touch\" }}>\r\n                {messageElements}\r\n                <div ref={scroll} ></div>\r\n            </div>\r\n            <div />\r\n            <div style={{ margin: '15px', marginLeft: '340px' }} >\r\n                <AlternativeMessage\r\n                    addMessage={addMessage}\r\n                    scroll={scroll}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../redux/redux-store';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nexport const WithAuthRedirect = (Component: any) => {\r\n   \r\n    class RedirectComponent extends React.Component<any, PropsType> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n   \r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConectedAuthRedirectComponent;\r\n}\r\n\r\n\r\nexport default WithAuthRedirect","\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport { addMessage, DialogsType, MessageType } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { ComponentType } from 'react';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    message: state.dialogsPage.message,\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { addMessage }),\r\n)(Dialogs)\r\n\r\n\r\n\r\n"],"sourceRoot":""}