{"version":3,"sources":["components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","../node_modules/@mui/icons-material/AddPhotoAlternate.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ProfileStatus","updateStatus","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","item","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","length","alert","ProfileDataForm","profile","goToEditMode","fullName","Checkbox","style","height","color","lookingForAJob","marginLeft","contactsInput","button","onClick","ProfileData","isOwner","lookingForAJobDescription","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","ProfileInfo","savePhoto","saveProfile","users","followingInProgress","follow","unfollow","Preloader","inRef","React","createRef","descriptionBlock","src","photos","large","userPhoto","alt","ref","type","accept","display","target","files","padding","transition","current","click","description","initialValues","Post","props","likesCount","likes","setLikes","likeIt","setLikeIt","message","console","log","MyPosts","memo","posts","newPostText","addPost","updateNewPostText","postElements","map","p","id","placeholder","text","textarea","onKeyPress","charCode","MyPostsContainer","connect","state","profilePage","Profile","content","compose","authorizedUserId","auth","isAuth","usersPage","getUserProfile","getStatus","withRouter","getProfile","useCallback","userId","navigate","useNavigate","useParams"],"mappings":"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","file":"static/js/3.1c53e573.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileData_item__3S7JN\",\"fullName\":\"ProfileData_fullName__20u39\",\"button\":\"ProfileData_button__1v3Y1\",\"contacts\":\"ProfileData_contacts__trDgN\",\"contactsInput\":\"ProfileData_contactsInput__6pKl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3_7KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__33JVh\",\"profile\":\"ProfileInfo_profile__16K_f\",\"description\":\"ProfileInfo_description__2GpSI\",\"button\":\"ProfileInfo_button__yJqca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileStatus_item__2onaz\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"\n}), 'AddPhotoAlternate');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Mq8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__9cMJ0\",\"posts\":\"MyPosts_posts__3d0Un\",\"textarea\":\"MyPosts_textarea__jzmwN\",\"button\":\"MyPosts_button__A01AX\"};","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport s from './ProfileStatus.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    value: string\r\n    updateStatus: (value: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = ({value, updateStatus}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(value)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(value);\r\n    }, [value])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setStatus(value);\r\n    }\r\n\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif(e.currentTarget.value.length > 20) alert('many simbols')\r\n\t\telse setStatus(e.currentTarget.value)\r\n\t\t\r\n    }\r\n\r\n    return (\r\n        <div className={s.item} >\r\n            {!editMode &&\r\n                <div>\r\n                    <b> Status: </b> <span onDoubleClick={activateEditMode}>{value || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div >\r\n                    <input autoFocus onBlur={activateViewMode} \r\n                    onChange={onStatusChange}\r\n                      value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import { Checkbox } from '@mui/material';\r\nimport React, { Dispatch, SetStateAction } from 'react';\r\nimport { ProfileType } from '../../profile-reducer';\r\nimport s from './ProfileData.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    initialValues: any\r\n    goToEditMode: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\n\r\nexport const ProfileDataForm: React.FC<PropsType> = ({ profile, goToEditMode }) => {\r\n    return (\r\n        <div className={s.item}>\r\n\r\n            <div className={s.fullName} >\r\n                <input />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: <Checkbox style={{ height: '16px', color: '#376e91' }} />\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>:  <input style={{ height: '15px' }} />\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>:  <input style={{ marginLeft: '10px', height: '15px' }} />\r\n            </div>\r\n            <div className={s.contactsInput} > <b>Contacts</b>:\r\n                <li><span>facebook:</span> <input /></li>\r\n                <li><span>github:</span> <input /></li>\r\n                <li><span>instagram:</span>  <input /></li>\r\n                <li><span>mainLink:</span>  <input /></li>\r\n                <li><span>twitter:</span> <input /></li>\r\n                <li><span>vk:</span> <input /></li>\r\n                <li><span>website:</span>  <input /></li>\r\n                <li><span>youtube:</span> <input /></li>\r\n            </div>\r\n            <div><button className={s.button} onClick={() => goToEditMode(false)}>save</button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { ProfileType } from '../../profile-reducer';\r\nimport s from './ProfileData.module.css';\r\n\r\n\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div className={s.item}>\r\n        <div className={s.fullName} >\r\n            {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div className={s.contacts}> <b>Contacts</b>:\r\n            <li><span>facebook:</span> {profile.contacts.facebook}</li>\r\n            <li><span>github:</span> {profile.contacts.github}</li>\r\n            <li><span>instagram:</span> {profile.contacts.instagram}</li>\r\n            <li><span>mainLink:</span> {profile.contacts.mainLink}</li>\r\n            <li><span>twitter:</span> {profile.contacts.twitter}</li>\r\n            <li><span>vk:</span> {profile.contacts.vk}</li>\r\n            <li><span>website:</span> {profile.contacts.website}</li>\r\n            <li><span>youtube:</span> {profile.contacts.youtube}</li>\r\n        </div>\r\n        {isOwner && <div><button className={s.button} onClick={goToEditMode}>edit</button></div>}\r\n    </div>\r\n}\r\n\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { ProfileType } from '../profile-reducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport { ProfileDataForm } from './ProfileData/ProfileDataForm';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport { ProfileData } from './ProfileData/ProfileData';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppRootStateType } from '../../../redux/redux-store';\r\nimport { UserType } from '../../Users/users-reducer';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    updateStatus: (value: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileType) => void\r\n    users: UserType[]\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (\r\n    {\r\n        profile,\r\n        status,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        isOwner,\r\n        users,\r\n        followingInProgress,\r\n        follow,\r\n        unfollow\r\n    }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files !== null) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const inRef = React.createRef<HTMLInputElement>();\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.profile}>\r\n                    <img src={profile.photos.large\r\n                        ? profile.photos.large\r\n                        : userPhoto} className={s.userPhoto} alt='avatar' />\r\n                    {\r\n                        isOwner && <div> <input ref={inRef} type='file'\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                            style={{ display: 'none' }}\r\n                            onChange={onMainPhotoSelected} />\r\n                            <AddPhotoAlternateIcon className={s.button} style={{ padding: '2px 3px', color: 'rgb(179 243 253)', transition: '.5s' }}\r\n                                onClick={() => inRef && inRef.current?.click()}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <div>\r\n                        <ProfileStatus updateStatus={updateStatus} value={status} />\r\n                    </div>\r\n                    {/* {\r\n                        users.map(u => u.followed\r\n                            ? <button className={s.gradientButton} disabled={followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => { follow(u.id) }}\r\n                            > Unfollow </button>\r\n                            : <button className={s.gradientButton} disabled={followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => { unfollow(u.id) }}\r\n                            > Follow </button>\r\n                        )\r\n                    } */}\r\n                </div>\r\n                <span ></span>\r\n                <div className={s.description}  >\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} goToEditMode={setEditMode} />\r\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo","import React, { useState } from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PropsType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n\r\n  const [likes, setLikes] = useState(props.likesCount)\r\n  const [likeIt, setLikeIt] = useState(false)\r\n\r\n\r\n  const handleClick = () => {\r\n    if (!likeIt) {\r\n      setLikes(likes + 1)\r\n      setLikeIt(true)\r\n    } else {\r\n      setLikes(likes - 1)\r\n      setLikeIt(false)\r\n    }\r\n    console.log(likes)\r\n  }\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://i.pinimg.com/600x315/63/e4/e2/63e4e23fffdb56ee09a20ff630eef6ea.jpg' alt='Ava' />\r\n      {props.message}\r\n      <div>\r\n        <span>\r\n          <button\r\n            onClick={handleClick}\r\n          >\r\n            {likeIt ? \"💙\" : \"🤍\"}\r\n          </button>\r\n        </span> {likes} likes\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { ChangeEvent, KeyboardEvent } from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport { PostType } from '../profile-reducer';\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n  addPost: () => void\r\n  updateNewPostText: (text: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = React.memo(({ posts, newPostText, addPost, updateNewPostText }) => {\r\n\r\n  const postElements = posts.map(p =>\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  )\r\n\r\n  const onClickHandler = () => {\r\n    addPost()\r\n  }\r\n\r\n  const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let text = e.currentTarget.value\r\n    updateNewPostText(text)\r\n  }\r\n\r\n\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.charCode === 13) {\r\n      addPost();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <h3>My posts</h3>\r\n      <hr />\r\n      <div>\r\n        <textarea\r\n          placeholder='New Post...'\r\n          value={newPostText}\r\n          onChange={onPostChange}\r\n          className={s.textarea}\r\n          onKeyPress={onKeyPressHandler}\r\n        />\r\n      </div>\r\n      <button\r\n        className={s.button}\r\n        onClick={onClickHandler}\r\n      >\r\n        Public\r\n      </button>\r\n\r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\nexport default MyPosts;","\r\nimport { AppRootStateType } from '../../../redux/redux-store';\r\nimport { addPost, PostType, updateNewPostText } from '../profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    updateNewPostText\r\n})(MyPosts)\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport { ProfileType } from './profile-reducer';\r\nimport { UserType } from '../Users/users-reducer';\r\n\r\ntype PropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatus: (value: string) => void\r\n  savePhoto: (file: any) => void\r\n  saveProfile: (profile: ProfileType) => void\r\n  isOwner: boolean\r\n  users: UserType[]\r\n  followingInProgress: []\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n}\r\n\r\n\r\nconst Profile: React.FC<PropsType> = (\r\n  {\r\n    profile,\r\n    status,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    isOwner,\r\n    users,\r\n    followingInProgress,\r\n    follow,\r\n    unfollow\r\n  }) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={profile}\r\n        savePhoto={savePhoto}\r\n        saveProfile={saveProfile}\r\n        isOwner={isOwner}\r\n        updateStatus={updateStatus}\r\n        status={status}\r\n        users={users}\r\n        followingInProgress={followingInProgress}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React, { ComponentType, useCallback, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, ProfileType, savePhoto, saveProfile } from \"./profile-reducer\";\r\nimport { withRouter } from '../../hoc/WithRouter';\r\nimport { compose } from 'redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { UserType, follow, unfollow } from '../Users/users-reducer';\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    authorizedUserId: number\r\n    status: string\r\n    getStatus: (userId: number) => void\r\n    getUserProfile: (userId: string | undefined) => void\r\n    updateStatus: (value: string) => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: ProfileType) => void\r\n    users: UserType[]\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst ProfileContainer: React.FC<PropsType> = (\r\n    {\r\n        profile,\r\n        authorizedUserId,\r\n        status,\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        users,\r\n        followingInProgress,\r\n        follow,\r\n        unfollow\r\n    }) => {\r\n\r\n    const getProfile = useCallback((userId: any) => {\r\n        getUserProfile(userId)\r\n        getStatus(userId)\r\n    }, [])\r\n\r\n    const navigate = useNavigate()\r\n    const { userId } = useParams();\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            let userId = authorizedUserId;\r\n            if (!userId) {\r\n                navigate(\"/login\");\r\n            }\r\n            getProfile(userId)\r\n        } else {\r\n            getProfile(userId)\r\n        }\r\n    }, [])\r\n\r\n    return <Profile\r\n        isOwner={!userId}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        savePhoto={savePhoto}\r\n        saveProfile={saveProfile}\r\n        users={users}\r\n        followingInProgress={followingInProgress}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    users: state.usersPage.users,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    // WithAuthRedirect,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile, follow, unfollow }),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}