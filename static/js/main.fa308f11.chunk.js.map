{"version":3,"sources":["hoc/WithRouter.tsx","redux/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","api/api.ts","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Calendar/Calendar.tsx","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Music/Music.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/common/Preloader/Preloader.tsx","components/Users/users.module.css","components/Login/Login.module.css","components/common/Paginator/Paginator.module.css","components/Music/Music.module.css","components/Header/Header.module.css","redux/profile-reducer.ts","assets/images/user.png"],"names":["withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","ADD_MESSAGE","initialState","dialogs","id","name","src","message","avatar","time","addMessage","title","type","dialogsReducer","state","action","rand","Math","floor","random","length","min","Date","getMinutes","newMessage","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","delete","unfollow","post","authAPI","me","login","email","password","rememberMe","captcha","logout","profileAPI","getUserProfie","userId","getStatus","updateStatus","status","put","saveProfilePhoto","photoFile","formData","FormData","append","Navbar","className","styles","nav","item","active","to","Calendar","useState","show","setShow","setCounter","date","setDate","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","useEffect","setInterval","style","display","flexDirection","alignItems","onMouseEnter","onMouseLeave","marginTop","color","users","totalUsersCount","isFetching","followingInProgress","usersReducer","map","u","followed","page","filter","toggleIsFetching","toggleFollowingProgress","setCurrentPage","followUnfollowFlow","dispatch","apiMethod","a","data","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","buttonPrev","disabled","onClick","p","e","buttonNext","opacity","User","user","userBlock","photos","small","userPhoto","alt","gradientButton","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","compose","connect","res","items","totalCount","bind","Music","switchOnOff","setSwitchOnOff","audio","Audio","pleer","pause","play","Header","s","header","loginBlock","isAuth","margin","SET_USER_DATA","authReducer","payload","setAuthUserData","getAuthUserData","HeaderContainer","auth","then","console","log","loginSchema","Yup","shape","max","required","LoginForm","useDispatch","initialValues","validationSchema","onSubmit","values","loginTC","isSubmitting","placeholder","errors","component","Login","useSelector","loginForm","INITIALIZED_SUCCESS","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","element","textAlign","position","top","width","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","dialogsPage","profilePage","profileReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","ldsspinner","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","profile","addPost","updateNewPostText","text","newText","setStatus","getUserProfile","savePhoto","getState","newPost","postId"],"mappings":"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","file":"static/js/main.fa308f11.chunk.js","sourcesContent":["\r\nimport React, { ComponentType } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n    function ComponentWithRouterProp(props: T) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n }\r\n \r\n","\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        { id: 1, name: 'Sonechka', src: 'https://sun2-10.userapi.com/s/v1/if1/w1y1anZFpf-CNhV-lyM8U6QCcnKkY164nwL0HkaM1FCU6CxDm4dQ3F0i9yR8ib5JCojY2P7X.jpg?size=100x0&quality=96&crop=58,0,339,339&ava=1' },\r\n        { id: 2, name: 'Maks', src: 'https://sun2-4.userapi.com/s/v1/ig2/tmGqC7l6DkVdw8p1o8raCVmvPtRmFeWjVODUXOn8ClIXSBpLUKtcascbdMK0i0qBhTs0aXgP7qSj-evbmXNdcL9X.jpg?size=100x0&quality=96&crop=26,6,1580,1580&ava=1' },\r\n        { id: 3, name: 'Dimych', src: 'https://sun2-4.userapi.com/s/v1/if1/WKIru_JWpP_NC33uxlLNSzN_FCVYF2ATJmiCUPBesjXHmmhm6r9zUDFCO0ewZ2F-RZC9qFYz.jpg?size=50x0&quality=96&crop=322,289,1006,1006&ava=1' },\r\n        { id: 4, name: 'Masha', src: 'https://sun2-3.userapi.com/s/v1/ig1/ZEoKnBuJ0WePJx9izTmq4QNH657mCi5IPIfuxZJGyaz-kWOF-CrCBqKT6FRZHfZ16xZsqYT7.jpg?size=100x0&quality=96&crop=160,0,759,759&ava=1' },\r\n        { id: 5, name: 'Ulya', src: 'https://sun2-3.userapi.com/s/v1/ig2/lxJkYCHND2QJIj6Y6CiLOIZn64fKd1lp2_pkoHGcLhi5ugP7zsKEcKpDSDVkWFsVWk_9JWws4VdRK05CIAZns7-j.jpg?size=100x0&quality=96&crop=0,274,1215,1215&ava=1' },\r\n        { id: 6, name: 'Ustina', src: 'https://sun9-59.userapi.com/impf/Xr5HIhSHG2Xn-b6EXFY0x1KMNfa5VpmofbNzlQ/cS6GLKimqdg.jpg?size=1080x1080&quality=96&sign=e702e7ebd20a8cddfbebd77957c00ecc&type=album' },\r\n        { id: 7, name: 'Sasha', src: 'https://sun2-9.userapi.com/s/v1/ig2/k-NYQ6bwT9zwVHoWsY9mEW35tf56gqKIZSogiC5qcE32xOlTKCMvn3poYzyhEn0fKrStu2jhWt6di522b1IjrWHb.jpg?size=100x0&quality=96&crop=12,12,200,200&ava=1' },\r\n        { id: 8, name: 'Vova', src: 'https://sun2-4.userapi.com/s/v1/ig1/X2AsqRo-dhkjrmbPk2fwjAJjQipXwXvaGtQFw42mSpDrZUYK5pR5AiM6HUwJktqkET6WctPB.jpg?size=100x0&quality=96&crop=615,256,588,588&ava=1' }\r\n    ] as Array<DialogsType>,\r\n    message: [ \r\n        { id: 1, avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Sasha', message: 'Hello, my friends', time: '22:00'\r\n    },\r\n    { id: 2, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Hi all', time: '22:07'\r\n    },\r\n    { id: 3, avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\r\n        name: 'Sonya', message: 'yo yo yo', time: '22:15'\r\n    },\r\n    { id: 4, avatar: 'https://top-tok.ru/wp-content/uploads/e8a52fc5-620c-4d7c-8f34-ddd8f605f95a.jpg',\r\n        name: 'Natali', message: 'How a you?', time: '22:17'\r\n    },\r\n    { id: 5, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Everything is fine', time: '22:18'\r\n    },\r\n    { id: 6, avatar: 'https://i.pinimg.com/originals/38/20/44/382044ab16b8772d62a6043dc202bd86.jpg',\r\n        name: 'Galya', message: 'What do you do', time: '22:19'\r\n    },\r\n    { id: 7, avatar: 'https://papik.pro/uploads/posts/2022-01/thumbs/1642409371_29-papik-pro-p-gacha-stikeri-31.jpg',\r\n        name: 'Dima', message: 'I went out for a walk', time: '22:19'\r\n    },\r\n    { id: 8, avatar: 'https://yt3.ggpht.com/a/AATXAJwg1JVXn5R_VJH_tSFHvGrBbwGEfEW0yDUBAgDkag=s900-c-k-c0xffffffff-no-rj-mo',\r\n        name: 'Alina', message: 'I will sleep', time: '22:23'\r\n    }\r\n] as Array<MessageType>,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: DialogsActionsType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            const rand = Math.floor(Math.random() * state.message.length)\r\n            let min = new Date().getMinutes()\r\n\r\n            let newMessage: MessageType = {\r\n                id: 9,\r\n                avatar: state.message[rand].avatar,\r\n                name: state.message[rand].name,\r\n                message: action.title,\r\n                time: '15 :' + min\r\n        \r\n            }\r\n            return {\r\n                ...state,\r\n                message: [ ...state.message, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype addMessageType = ReturnType<typeof addMessage>\r\nexport const addMessage = (title: string) => ({ type: ADD_MESSAGE, title } as const)\r\n\r\n\r\nexport type DialogsActionsType = addMessageType\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsspinner\":\"Preloader_ldsspinner__2ajmc\",\"lds-spinner\":\"Preloader_lds-spinner__2eR9q\"};","import { ProfileType } from './../redux/profile-reducer';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d885d4a3-64ff-4a70-8cfb-d6db15bc8bae\"\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) =>\r\n        instance.get(`users?page=${currentPage}&count=${pageSize}`),\r\n\r\n    follow: (id: number) => instance.delete(`follow/${id}`),\r\n\r\n    unfollow: (id: number) => instance.post(`follow/${id}`),\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me: () => instance.get('auth/me'),\r\n\r\n    login: (email: string, password: number, rememberMe: boolean, captcha = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n\r\n    logout: () => instance.delete(`auth/login`),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfie: (userId: number) => instance.get<ProfileType>(`profile/${userId}`),\r\n\r\n    getStatus: (userId: number) => instance.get(`profile/status/${userId}`),\r\n\r\n    updateStatus: (status: string) => instance.put(`profile/status`, { status }),\r\n\r\n    saveProfilePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fll_\",\"item\":\"Navbar_item__166Pj\",\"active\":\"Navbar_active__25wbV\"};","import React from 'react'\r\nimport { FaCogs, FaCommentDots, FaFacebookMessenger, FaMusic, FaRegCalendarAlt, FaRegUserCircle, FaUsers } from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n        <div className={styles.nav}>\r\n            <div className={`${styles.item} ${styles.active}`} >\r\n               <FaRegUserCircle />\r\n                <NavLink to=\"/profile/\">Profile</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n              <FaFacebookMessenger />\r\n              {/* <FaCommentDots /> */}\r\n                <NavLink to=\"/dialogs/\">Messages</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n             <FaMusic />\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <FaUsers />\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <FaCogs  />\r\n                <NavLink to=\"/setting\">Setting</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n               <FaRegCalendarAlt />\r\n                <NavLink to=\"/calendar\">Сalendar</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Calendar() {\r\n\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [ , setCounter] = useState(0)\r\n    const [date, setDate] = useState<Date>()\r\n    \r\n    const stringTime = date?.toLocaleTimeString() || <br /> // fix with date\r\n    const stringDate = date?.toLocaleDateString()\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date())\r\n            setCounter(state => state + 1)\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            {/* <h1> {day} {month}  </h1> */}\r\n            <div \r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                <h2 style={{ marginTop: '0px', color: 'black' }}\r\n                > {stringTime}\r\n                </h2>\r\n            </div>\r\n            {show ? (\r\n                <div>\r\n                    <h1> {stringDate} </h1>\r\n                </div>\r\n            ) : <br />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Calendar;\r\n","import { usersAPI } from \"../api/api\"\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos?: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>  //array of users ids\r\n};\r\n\r\nexport type UsersReducerType = typeof initialState\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case 'TOGGLE_FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case 'SET_USERS': {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype ActionsType =\r\n    ToggleFollowType |\r\n    setUsersType |\r\n    setCurrentPageType |\r\n    setUsersTotalCountType |\r\n    toggleIsFetchingType |\r\n    toggleIsFollowingProgressType\r\n\r\ntype ToggleFollowType = ReturnType<typeof toggleFollow>\r\nexport const toggleFollow = (userId: number) =>\r\n    ({ type: 'TOGGLE_FOLLOW', userId } as const)\r\n\r\ntype toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const)\r\n\r\ntype toggleIsFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (userId: number, isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FOLLOWING_PROGRESS', userId, isFetching } as const)\r\n\r\ntype setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({ type: 'SET_USERS', users } as const)\r\n\r\ntype setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) =>\r\n    ({ type: 'SET_CURRENT_PAGE', page } as const)\r\n\r\ntype setUsersTotalCountType = ReturnType<typeof setUsersTotalCount>\r\nexport const setUsersTotalCount = (totalUsersCount: number) =>\r\n    ({ type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const)\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n\tdispatch(setCurrentPage(page))\r\n    const res = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(res.data.items));\r\n            dispatch(setUsersTotalCount(res.data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any) => {\r\n    dispatch(toggleFollowingProgress(id, true))\r\n    const res = await apiMethod(id)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(toggleFollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(id, false))\r\n} \r\n\r\nexport const follow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\nexport const unfollow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer\r\n","\r\nimport React, { useState } from 'react'\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage?: number\r\n    portionSize?: number\r\n}\r\nconst Paginator: React.FC<PaginatorPropsType> = (\r\n    {\r\n        pageSize, totalItemsCount, onPageChanged,\r\n        currentPage, portionSize = 20,\r\n    }\r\n) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    \r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        {/* <button onClick={(e) => { onPageChanged(1)}} >{'<<'}</button> */}\r\n        <button className={styles.buttonPrev}\r\n            disabled={portionNumber < 2}\r\n            onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n        >\r\n           {'<PREV'}\r\n        </button>\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <button \r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</button>\r\n            })}\r\n        <button className={styles.buttonNext}\r\n        style={{opacity:  portionCount < portionNumber + 1 ? '0.1' : ''}}\r\n            disabled={portionCount < portionNumber + 1}\r\n            onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n        >\r\n            {'NEXT>'}\r\n        </button>\r\n        {/* <button onClick={(e) => { onPageChanged(pagesCount)}}  >{'>>'}</button> */}\r\n    </div>\r\n}\r\n\r\nexport default Paginator\r\n","\r\nimport React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollow, follow }\r\n    ) => {\r\n\r\n    return <div className={styles.userBlock}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`} >\r\n                    <img src={user.photos?.small != null ? user.photos?.small : userPhoto}\r\n                        className={styles.userPhoto} alt='profilePhoto' />\r\n                </NavLink>\r\n            </div>\r\n            <div >\r\n                \r\n                {user.followed\r\n                    ? <button className={styles.gradientButton} disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}\r\n                    > Unfollow </button>\r\n                    : <button className={styles.gradientButton} disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}\r\n                    > Follow </button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status || <br /> } </div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n","\r\nimport React from 'react';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (\r\n    {\r\n        currentPage, totalUsersCount,\r\n        pageSize, onPageChanged, users,\r\n        ...props\r\n    }) => {\r\n    return <div>\r\n        <Paginator pageSize={pageSize} currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount} onPageChanged={onPageChanged}\r\n        />\r\n\r\n\r\n\r\n        <div  >\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"./redux-store\";\r\nimport { UserType } from \"./users-reducer\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users: Array<UserType>) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage;\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress;\r\n\r\n","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage,\r\n    UserType,\r\n    toggleIsFetching,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    setCurrentPage: (pageNumber: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<any, UsersPropsType> {\r\n    componentDidMount() {\r\n\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    };\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const pageSize = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        toggleIsFetching,\r\n        setCurrentPage,\r\n        getUsers: requestUsers ,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer)\r\n","import React, { useState } from 'react';\r\nimport styles from './Music.module.css'\r\n\r\n\r\nfunction Music() {\r\n\r\n    const [switchOnOff, setSwitchOnOff] = useState(false)\r\n\r\n    let url = \"http://streaming.tdiradio.com:8000/house.mp3\";\r\n\r\n    let audio = new Audio(url);\r\n\r\n    const handleOnOffClick = () => {\r\n        if (switchOnOff === false) {\r\n            setSwitchOnOff(true)\r\n            audio.pause()\r\n        } else {\r\n            setSwitchOnOff(false)\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pleer}>\r\n            <div>\r\n                <div className={styles.item}>Radio📻</div>\r\n            </div>\r\n            <button onClick={() => handleOnOffClick()} >\r\n                {\r\n                    !switchOnOff ? <h2>▶️</h2> : <h2>⏸️</h2>\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport { FaUserCheck, FaUserMinus } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props: PropsType) {\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            {\r\n                props.isAuth ? <FaUserCheck style={{ margin: '4px' }} />\r\n                    : <FaUserMinus style={{ margin: '4px' }} />\r\n            }\r\n            {\r\n                props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <div><NavLink to='/login' > Login </NavLink> </div>\r\n            }\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header\r\n","\r\nimport { authAPI } from \"../api/api\";\r\nimport { AppThunkType } from \"./redux-store\";\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: AuthActionsType): authReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\ntype setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n) =>\r\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } } as const)\r\n\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch) => {\r\n    const res = await authAPI.me();\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: number, rememberMe: boolean, captcha = false): AppThunkType => (dispatch) => {\r\n    return authAPI.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n\r\n}\r\nexport const logout = (): AppThunkType => (dispatch) => {\r\n    return authAPI.logout()\r\n        .then(res => {\r\n            console.log('in then', res)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type AuthActionsType = setAuthUserDataType\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport Header from './Header'\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any, PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.css'\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(20, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\r\n});\r\n\r\nconst LoginForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  type ValuesType = {\r\n    email: string\r\n    password: any\r\n    rememberMe: boolean\r\n  }\r\n\r\n\r\n  let handleSubmit = (values: ValuesType) => {\r\n    dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", rememberMe: false }}\r\n        validationSchema={loginSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ isSubmitting }) => {\r\n          return (\r\n            <Form className={s.loginBlock} >\r\n              <label>\r\n                Email: <Field placeholder=\"email\" type=\"email\" name=\"email\" />\r\n                <ErrorMessage className={s.errors} name=\"email\" component=\"div\" />\r\n              </label>\r\n              <label>\r\n                Password:\r\n                <Field placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                <ErrorMessage className={s.errors} name=\"password\" component=\"div\" />\r\n              </label>\r\n              <button type=\"submit\" color={'primary'} disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n   \r\n  if (isAuth) {\r\n    return <Navigate to={\"/profile\"} />\r\n  }\r\n\r\n  return (\r\n    <div className={s.loginForm}>\r\n      <LoginForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import { getAuthUserData } from './auth-reducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\ntype AppReducerType = typeof initialState\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionsType): AppReducerType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const)\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\nexport type AppActionsType = initializedSuccessType\r\n\r\nexport default appReducer\r\n","import React, { Component, ComponentType, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Music from './components/Music/Music';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport { withRouter } from './hoc/WithRouter'\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\ntype PropsType = {\r\n  initializeApp: () => void\r\n  initialized: boolean\r\n  isAuth: boolean\r\n}\r\n\r\nclass App extends Component<PropsType, PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div\r\n        style={{ position: 'fixed', top: '30%', textAlign: 'center', width: '100%' }}>\r\n        <Preloader />\r\n      </div>\r\n    }\r\n  \r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Suspense fallback={<Preloader />}>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path='/' element={<Navigate to={\"/profile\"} />} />\r\n              <Route path=\"/profile/*\" element={<ProfileContainer />} />\r\n              <Route path=\"/profile/:userId\" element={<ProfileContainer />} />\r\n              <Route path=\"/dialogs/*\" element={<DialogsContainer />} />\r\n              <Route path=\"/users\" element={<UsersContainer />} />\r\n              <Route path=\"/calendar\" element={<Calendar />} />\r\n              <Route path=\"/music\" element={<Music />} />\r\n              <Route path=\"/404\" element={<h1 style={{ textAlign: 'center' }} >404: PAGE NOT FOUND</h1>} />\r\n              <Route path=\"/*\" element={<Navigate to='404' />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n  initialized: state.app.initialized,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter,\r\n)(App)\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionsType, authReducer } from './auth-reducer';\r\nimport { usersReducer } from './users-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionsType } from \"./dialogs-reducer\";\r\nimport profileReducer, { ProfileActionsType } from \"./profile-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport appReducer, { AppActionsType } from './app-reducer';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AllActionsType =\r\n    AppActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | AuthActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { store } from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import styles from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.ldsspinner}   ><div></div><div></div><div></div>\r\n            <div></div><div></div><div></div><div></div><div></div>\r\n            <div></div><div></div><div> </div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__IH2zC\",\"userBlock\":\"users_userBlock__1ioSy\",\"gradientButton\":\"users_gradientButton__1OKQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__qumOe\",\"loginBlock\":\"Login_loginBlock__Z-_Xs\",\"errors\":\"Login_errors__3dS0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1gSQb\",\"buttonPrev\":\"Paginator_buttonPrev__2_aIG\",\"buttonNext\":\"Paginator_buttonNext__2x3-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pleer\":\"Music_pleer__2ayyf\",\"item\":\"Music_item__1eXWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H_o5P\"};","import { profileAPI } from \"../api/api\"\r\nimport { AppThunkType } from \"./redux-store\"\r\n\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype PhotosType = {\r\n    small?: string\r\n    large?: string\r\n    //large: any\r\n}\r\n\r\ntype ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n\r\n}\r\n\r\nexport type initialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    status: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Yo\", likesCount: 23 },\r\n        { id: 2, message: \"I'm in to IT\", likesCount: 12 },\r\n        { id: 3, message: \"I'\", likesCount: 57 },\r\n        { id: 4, message: \"I'm a BOSS\", likesCount: 23 }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.newText }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\ntype AddPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => ({ type: ADD_POST } as const)\r\n\r\n\r\ntype UpdateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (text: string) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\r\n\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: ProfileType) =>\r\n    ({ type: SET_USER_PROFILE, profile } as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (status: string) =>\r\n    ({ type: SET_STATUS, status } as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({ type: DELETE_POST, postId } as const)\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: any): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getUserProfie(userId)\r\n    dispatch(setUserProfile(res.data));\r\n}\r\n\r\nexport const getStatus = (userId: number): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (photos: any): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    let res = await profileAPI.saveProfilePhoto(photos)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostType\r\n    | UpdateNewPostTextType\r\n    | SetUserProfileType\r\n    | SetStatusType\r\n    | DeletePostType\r\n\r\nexport default profileReducer\r\n","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";"],"sourceRoot":""}