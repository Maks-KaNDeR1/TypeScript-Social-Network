{"version":3,"sources":["components/Dialogs/Message/Message.tsx","components/Dialogs/Message/Message.module.css","../node_modules/@mui/icons-material/Send.js","pages/Chat/AlternativeMessage.module.css","pages/Chat/AlternativeMessage.tsx","pages/Chat/ChatPage.tsx"],"names":["MessageComponent","id","avatar","name","message","time","sentMessage","className","s","displaySent","style","justifyContent","description","borderRadius","nameSent","textSent","timeSent","angleSent","src","alt","acceptedMessage","display","angle","text","module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AlternativeMessage","title","setTitle","onClickHandler","disabled","items","type","placeholder","onChange","event","currentTarget","onKeyPress","e","charCode","cursor","marginBottom","onClick","Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","Messages","messages","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","current","scrollIntoView","behavior","height","overflowY","onScroll","element","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","ref","Message","React","memo","console","log","userId","photo","userName","AddMessageForm","setMessage","sendMessage","ChatPage"],"mappings":"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","file":"static/js/5.2c2a0855.chunk.js","sourcesContent":["import s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time?: any\r\n}\r\n\r\n\r\nconst MessageComponent: React.FC<PropsType> = ({ id, avatar, name, message, time }) => {\r\n\r\n    const sentMessage = <div className={s.displaySent}>\r\n        <div className={s.message} style={{ justifyContent: 'flex-end' }} >\r\n            <div className={s.description} style={{ borderRadius: '26px 28px 0 26px' }}>\r\n                <div className={s.nameSent}>{name}</div>\r\n                <div className={s.textSent}>{message}</div>\r\n                <span className={s.timeSent}>{time}</span>\r\n            </div>\r\n\r\n            <div className={s.angleSent} />\r\n\r\n            <img src={avatar} alt={'avatar'} />\r\n        </div>\r\n    </div>\r\n\r\n    const acceptedMessage = <div className={s.display}>\r\n        <div className={s.message}>\r\n            <img src={avatar} alt={'avatar'} />\r\n\r\n            <div className={s.angle} />\r\n\r\n            <div className={s.description}>\r\n                <div className={s.name}>{name}</div>\r\n                <div className={s.text}>{message}</div>\r\n                <span className={s.time}>{time}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    if (id === 24185)\r\n        return sentMessage\r\n    else return acceptedMessage\r\n}\r\n\r\n\r\nexport default MessageComponent\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Message_display__1EHVd\",\"message\":\"Message_message__ABkZL\",\"description\":\"Message_description__3trQ6\",\"angle\":\"Message_angle__2v-k7\",\"angleSent\":\"Message_angleSent__1R_z6\",\"name\":\"Message_name__2eLj0\",\"text\":\"Message_text__2Dm9O\",\"time\":\"Message_time__1ODfc\",\"nameSent\":\"Message_nameSent__2sRcT\",\"textSent\":\"Message_textSent__2-uh7\",\"timeSent\":\"Message_timeSent__1bH7-\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"AlternativeMessage_items__3Ohkh\"};","import React, { ChangeEvent, KeyboardEvent } from 'react'\r\nimport s from './AlternativeMessage.module.css'\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\ntype PropsType = {\r\n    title: string\r\n    setTitle: (title: string) => void\r\n    onClickHandler: () => void\r\n    disabled: boolean\r\n}\r\n\r\nconst AlternativeMessage: React.FC<PropsType> = ({ title, setTitle, onClickHandler, disabled }) => {\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.items} >\r\n            <div>\r\n                <input type='text'\r\n                    placeholder=' New message...'\r\n                    value={title}\r\n                    onChange={onChangeHandler}\r\n                    onKeyPress={onKeyPressHandler}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button disabled={disabled}\r\n                    style={{ cursor: 'pointer', marginBottom: '-6px' }}\r\n                    onClick={onClickHandler}\r\n                ><SendIcon /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AlternativeMessage\r\n","import React, { KeyboardEvent, useEffect, useRef, useState } from 'react'\r\nimport { ChatMessageAPIType } from '../../api/chat-api'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sendMessage, startMessagesListening, stopMessagesListening } from './chat-reducer'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport AlternativeMessage from './AlternativeMessage'\r\nimport MessageComponent from '../../components/Dialogs/Message/Message'\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const status = useSelector((state: AppRootStateType) => state.chat.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </>\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const messages = useSelector((state: AppRootStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget;\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [messages])\r\n\r\n    return <div style={{ height: '500px', overflowY: 'auto' }} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m} />)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({ message }) => {\r\n    console.log(\">>>>>>Message\")\r\n    console.log(message)\r\n    return <MessageComponent\r\n        id={message.userId}\r\n        message={message.message}\r\n        avatar={message.photo}\r\n        name={message.userName}\r\n    />\r\n\r\n})\r\n\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppRootStateType) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return <AlternativeMessage\r\n        title={message}\r\n        setTitle={setMessage}\r\n        onClickHandler={sendMessageHandler}\r\n        disabled={status !== 'ready'}\r\n\r\n    />\r\n}\r\n\r\nexport default ChatPage\r\n"],"sourceRoot":""}