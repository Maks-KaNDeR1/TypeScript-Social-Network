{"version":3,"sources":["assets/images/user.png","hoc/WithRouter.tsx","redux/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.tsx","components/Calendar/Calendar.tsx","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Music/Music.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","redux/app-reducer.ts","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","api/api.ts","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Users/users.module.css","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","components/Music/Music.module.css","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","ADD_MESSAGE","initialState","dialogs","id","name","src","message","avatar","time","addMessage","title","type","dialogsReducer","state","action","rand","Math","floor","random","length","min","Date","getMinutes","newMessage","module","exports","styleIcon","color","Navbar","className","styles","nav","item","style","to","Calendar","useState","show","setShow","setCounter","date","setDate","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","useEffect","setInterval","display","flexDirection","alignItems","onMouseEnter","onMouseLeave","marginTop","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","page","filter","toggleIsFetching","toggleFollowingProgress","setCurrentPage","followUnfollowFlow","dispatch","apiMethod","a","data","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","buttonPrev","opacity","disabled","onClick","p","e","buttonNext","User","user","unfollow","follow","s","userBlock","photos","small","userPhoto","alt","gradientButton","some","status","Users","usersBlock","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","compose","connect","usersAPI","res","items","totalCount","bind","Music","switchOnOff","setSwitchOnOff","audio","Audio","pleer","pause","play","Header","isAuth","login","logout","header","loginBlock","margin","SET_USER_DATA","email","authReducer","payload","setAuthUserData","getAuthUserData","authAPI","me","HeaderContainer","auth","then","console","log","INITIALIZED_SUCCESS","initialized","appReducer","LoginForm","useDispatch","eye","setEye","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","test","onSubmit","captcha","loginTC","Grid","container","justifyContent","handleSubmit","FormControl","loginBox","inputField","social","signIn","FormGroup","formGroup","TextField","width","textField","label","variant","getFieldProps","touched","error","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","FormControlLabel","control","Checkbox","onChange","handleChange","value","loginButton","Login","useSelector","loginForm","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","element","textAlign","top","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","dialogsPage","profilePage","profileReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","profileAPI","getUserProfie","getStatus","updateStatus","put","saveProfilePhoto","photoFile","formData","FormData","append","saveProfile","profile","ldsspinner","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","addPost","updateNewPostText","text","newText","setStatus","getUserProfile","savePhoto","getState","reject","messages","newPost","postId"],"mappings":"wHAAe,QAA0B,kC,qGCKlC,SAASA,EAAcC,GAY1B,OAXA,SAAiCC,GAC7B,IAAIC,EAAWC,cACXC,EAAWC,cACXC,EAASC,cACb,OACI,cAACP,EAAD,2BACQC,GADR,IAEIO,OAAQ,CAAEN,WAAUE,WAAUE,gB,uFCXjCG,EAAc,cAsBvBC,EAAmC,CACnCC,QAAS,CACL,CAAEC,GAAI,EAAGC,KAAM,WAAYC,IAAK,mKAChC,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,oLAC5B,CAAEF,GAAI,EAAGC,KAAM,SAAUC,IAAK,sKAC9B,CAAEF,GAAI,EAAGC,KAAM,QAASC,IAAK,mKAC7B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,qLAC5B,CAAEF,GAAI,EAAGC,KAAM,SAAUC,IAAK,sKAC9B,CAAEF,GAAI,EAAGC,KAAM,QAASC,IAAK,mLAC7B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,sKAEhCC,QAAS,CACL,CAAEH,GAAI,EAAGI,OAAQ,qFACjBH,KAAM,QAASE,QAAS,oBAAqBE,KAAM,SAEvD,CAAEL,GAAI,EAAGI,OAAQ,0EACbH,KAAM,SAAUE,QAAS,SAAUE,KAAM,SAE7C,CAAEL,GAAI,EAAGI,OAAQ,0EACbH,KAAM,QAASE,QAAS,WAAYE,KAAM,SAE9C,CAAEL,GAAI,EAAGI,OAAQ,iFACbH,KAAM,SAAUE,QAAS,aAAcE,KAAM,SAEjD,CAAEL,GAAI,EAAGI,OAAQ,0EACbH,KAAM,SAAUE,QAAS,qBAAsBE,KAAM,SAEzD,CAAEL,GAAI,EAAGI,OAAQ,+EACbH,KAAM,QAASE,QAAS,iBAAkBE,KAAM,SAEpD,CAAEL,GAAI,EAAGI,OAAQ,gGACbH,KAAM,OAAQE,QAAS,wBAAyBE,KAAM,SAE1D,CAAEL,GAAI,EAAGI,OAAQ,uGACbH,KAAM,QAASE,QAAS,eAAgBE,KAAM,WAiCzCC,EAAa,SAACC,GAAD,MAAoB,CAAEC,KAAMX,EAAaU,UAMpDE,IAlCe,WAA+F,IAA9FC,EAA6F,uDAAjEZ,EAAca,EAAmD,uCACxH,OAAQA,EAAOH,MACX,KAAKX,EAED,IAAMe,EAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMP,QAAQa,QAClDC,GAAM,IAAIC,MAAOC,aAEjBC,EAA0B,CAC1BpB,GAAI,EACJI,OAAQM,EAAMP,QAAQS,GAAMR,OAC5BH,KAAMS,EAAMP,QAAQS,GAAMX,KAC1BE,QAASQ,EAAOJ,MAChBF,KAAM,OAASY,GAGnB,OAAO,2BACAP,GADP,IAEIP,QAAQ,GAAD,mBAAOO,EAAMP,SAAb,CAAsBiB,MAGrC,QACI,OAAOV,K,oBCnFnBW,EAAOC,QAAU,CAAC,WAAa,8BAA8B,cAAc,iC,mNCqC3E,IAAIC,EAAiC,CACjCC,MAAO,iBAIIC,EAtCf,WACI,OACI,sBAAKC,UAAWC,IAAOC,IAAvB,UACI,sBAAKF,UAAWC,IAAOE,KAAvB,UACG,cAAC,IAAD,CAAiBC,MAAOP,IACvB,cAAC,IAAD,CAASQ,GAAG,YAAZ,wBAEJ,sBAAKL,UAAWC,IAAOE,KAAvB,UACE,cAAC,IAAD,CAAqBC,MAAOP,IAE1B,cAAC,IAAD,CAASQ,GAAG,YAAZ,yBAEJ,sBAAKL,UAAWC,IAAOE,KAAvB,UACC,cAAC,IAAD,CAASC,MAAOP,IACb,cAAC,IAAD,CAASQ,GAAG,SAAZ,sBAEJ,sBAAKL,UAAWC,IAAOE,KAAvB,UACI,cAAC,IAAD,CAASC,MAAOP,IAChB,cAAC,IAAD,CAASQ,GAAG,SAAZ,sBAEJ,sBAAKL,UAAWC,IAAOE,KAAvB,UACI,cAAC,IAAD,CAAQC,MAAOP,IACf,cAAC,IAAD,CAASQ,GAAG,WAAZ,wBAEJ,sBAAKL,UAAWC,IAAOE,KAAvB,UACG,cAAC,IAAD,CAAkBC,MAAOP,IACxB,cAAC,IAAD,CAASQ,GAAG,YAAZ,kC,gBCmBDC,MA/Cf,WAAqB,IAAD,EAEQC,oBAAkB,GAF1B,mBAETC,EAFS,KAEHC,EAFG,OAGQF,mBAAS,GAAvBG,EAHM,sBAIQH,qBAJR,mBAITI,EAJS,KAIHC,EAJG,KAMVC,GAAiB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMG,uBAAwB,uBAC3CC,EAAU,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAMK,qBAiBzB,OAdAC,qBAAU,WACNC,aAAY,WACRN,EAAQ,IAAIpB,MACZkB,GAAW,SAAA1B,GAAK,OAAIA,EAAQ,OAC7B,OACJ,IAWC,sBAAKoB,MAAO,CAAEe,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAApE,UAEI,qBACIC,aAZS,WACjBb,GAAQ,IAYAc,aAVS,WACjBd,GAAQ,IAOJ,SAII,qBAAIL,MAAO,CAAEoB,UAAW,MAAO1B,MAAO,SAAtC,cACGe,OAGNL,EACG,8BACI,mCAAMO,EAAN,SAEJ,2B,yDC5BZ3C,EAAe,CACfqD,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAKZC,EAAe,WAAoF,IAAnF/C,EAAkF,uDAAxDZ,EAAca,EAA0C,uCAC3G,OAAQA,EAAOH,MACX,IAAK,gBACD,OAAO,2BACAE,GADP,IAEIyC,MAAOzC,EAAMyC,MAAMO,KAAI,SAAAC,GACnB,OAAIA,EAAE3D,KAAOW,EAAOiD,OACT,2BAAKD,GAAZ,IAAeE,UAAWF,EAAEE,WAEzBF,OAInB,IAAK,YACD,OAAO,2BAAKjD,GAAZ,IAAmByC,MAAM,YAAKxC,EAAOwC,SAEzC,IAAK,wBACD,OAAO,2BAAKzC,GAAZ,IAAmB2C,gBAAiB1C,EAAO0C,kBAE/C,IAAK,mBACD,OAAO,2BAAK3C,GAAZ,IAAmB4C,YAAa3C,EAAOmD,OAE3C,IAAK,qBACD,OAAO,2BAAKpD,GAAZ,IAAmB6C,WAAY5C,EAAO4C,aAE1C,IAAK,+BACD,OAAO,2BACA7C,GADP,IAEI8C,oBAAqB7C,EAAO4C,WAAP,sBACX7C,EAAM8C,qBADK,CACgB7C,EAAOiD,SACtClD,EAAM8C,oBAAoBO,QAAO,SAAA/D,GAAE,OAAIA,IAAOW,EAAOiD,YAGnE,QACI,OAAOlD,IAmBNsD,EAAmB,SAACT,GAAD,MAC3B,CAAE/C,KAAM,qBAAsB+C,eAGtBU,EAA0B,SAACL,EAAgBL,GAAjB,MAClC,CAAE/C,KAAM,+BAAgCoD,SAAQL,eAOxCW,EAAiB,SAACJ,GAAD,MACzB,CAAEtD,KAAM,mBAAoBsD,SAiB3BK,EAAkB,uCAAG,WAAOC,EAAepE,EAAYqE,GAAlC,SAAAC,EAAA,6DACvBF,EAASH,EAAwBjE,GAAI,IADd,SAELqE,EAAUrE,GAFL,OAGa,IAHb,OAGPuE,KAAKC,YACTJ,EArCX,CAAE5D,KAAM,gBAAiBoD,OAqCQ5D,IAE1BoE,EAASH,EAAwBjE,GAAI,IANtB,2CAAH,0D,4CC9CTyE,EAnDiC,SAAC,GAU7C,IALE,IAHErB,EAGH,EAHGA,SAAUsB,EAGb,EAHaA,gBAAiBC,EAG9B,EAH8BA,cAG9B,KAFGrB,YAEH,EAFgBsB,oBAEhB,MAF8B,GAE9B,EAEGC,EAAahE,KAAKiE,KAAKJ,EAAkBtB,GAEzC2B,EAAQ,GACHC,EAAI,EAAGA,GAAKH,EAAYG,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAerE,KAAKiE,KAAKD,EAAaD,GATzC,EAUuC3C,mBAAS,GAVhD,mBAUIkD,EAVJ,KAUmBC,EAVnB,KAWGC,GAAyBF,EAAgB,GAAKP,EAAc,EAC5DU,EAAyBH,EAAgBP,EAK7C,OAAO,sBAAKlD,UAAW6D,IAAG5D,IAAO6D,WAA1B,UAEH,wBAAQ9D,UAAWC,IAAO8D,WAC1B3D,MAAO,CAAC4D,QAAUP,EAAgB,EAAI,MAAQ,IAC1CQ,SAAUR,EAAgB,EAC1BS,QAAS,WAAQR,EAAiBD,EAAgB,IAHtD,SAKI,UAEHJ,EACIhB,QAAO,SAAA8B,GAAC,OAAIA,GAAKR,GAAyBQ,GAAKP,KAC/C5B,KAAI,SAAAmC,GACD,OAAO,wBAEHD,QAAS,SAACE,GACNnB,EAAckB,IAHf,SAICA,GAHCA,MAKjB,wBAAQnE,UAAWC,IAAOoE,WAC1BjE,MAAO,CAAC4D,QAAUR,EAAeC,EAAgB,EAAI,MAAQ,IACzDQ,SAAUT,EAAeC,EAAgB,EACzCS,QAAS,WAAQR,EAAiBD,EAAgB,IAHtD,SAKK,c,0BCZEa,EA9BmB,SAAC,GAAqD,IAAD,IAAlDC,EAAkD,EAAlDA,KAAMzC,EAA4C,EAA5CA,oBAAqB0C,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACtE,OAAO,sBAAKzE,UAAW0E,IAAEC,UAAlB,UACH,iCACI,8BACI,cAAC,IAAD,CAAStE,GAAE,mBAAckE,EAAKjG,IAA9B,SACI,qBAAKE,IAA2B,OAAtB,UAAA+F,EAAKK,cAAL,eAAaC,OAAb,UAA6BN,EAAKK,cAAlC,aAA6B,EAAaC,MAAQC,IACxD9E,UAAW0E,IAAEI,UAAWC,IAAI,qBAGxC,8BAEKR,EAAKpC,SACA,wBAAQnC,UAAW0E,IAAEM,eAAgBf,SAAUnC,EAAoBmD,MAAK,SAAA3G,GAAE,OAAIA,IAAOiG,EAAKjG,MACxF4F,QAAS,WAAQO,EAAOF,EAAKjG,KAD/B,wBAGA,wBAAQ0B,UAAW0E,IAAEM,eAAgBf,SAAUnC,EAAoBmD,MAAK,SAAA3G,GAAE,OAAIA,IAAOiG,EAAKjG,MACxF4F,QAAS,WAAQM,EAASD,EAAKjG,KADjC,2BAMd,+BACI,iCACI,8BAAMiG,EAAKhG,OACX,gCAAMgG,EAAKW,QAAU,uBAArB,gBCKDC,EAzByB,SAAC,GAI9B,IAFHvD,EAEE,EAFFA,YAAaD,EAEX,EAFWA,gBAAiBD,EAE5B,EAF4BA,SAAUuB,EAEtC,EAFsCA,cAAexB,EAErD,EAFqDA,MACpD9D,EACD,oFACN,OAAO,gCACH,cAAC,EAAD,CAAW+D,SAAUA,EAAUE,YAAaA,EACxCoB,gBAAiBrB,EAAiBsB,cAAeA,IAKrD,qBAAKjD,UAAW0E,IAAEU,WAAlB,SAEQ3D,EAAMO,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMsC,KAAMtC,EACvBH,oBAAqBnE,EAAMmE,oBAC3B0C,SAAU7G,EAAM6G,SAChBC,OAAQ9G,EAAM8G,QAHiBxC,EAAE3D,a,yBC3BxC+G,EAAWC,aAFC,SAACtG,GAAD,OAA6BA,EAAMuG,UAAU9D,SAGlE,SAACA,GACG,OAAOA,EAAMY,QAAO,SAAAJ,GAAC,OAAI,QAGpBuD,EAAc,SAACxG,GAAD,OAA6BA,EAAMuG,UAAU7D,UAE3D+D,EAAqB,SAACzG,GAAD,OAA6BA,EAAMuG,UAAU5D,iBAElE+D,EAAiB,SAAC1G,GAAD,OAA6BA,EAAMuG,UAAU3D,aAE9D+D,EAAgB,SAAC3G,GAAD,OAA6BA,EAAMuG,UAAU1D,YAE7D+D,EAAyB,SAAC5G,GAAD,OAA6BA,EAAMuG,UAAUzD,qBCiB7E+D,G,4MAMF5C,cAAgB,SAAC6C,GACb,IAAMpE,EAAW,EAAK/D,MACtB,EAAKA,MAAM0H,SAASS,EAAYpE,I,uDAPpC,WAAqB,IAAD,EACgBqE,KAAKpI,MAA9BiE,EADS,EACTA,YAAaF,EADJ,EACIA,SACpBqE,KAAKpI,MAAM0H,SAASzD,EAAaF,K,oBAQrC,WAEI,OAAO,yCAAIqE,KAAKpI,MAAMkE,WAAa,cAACmE,EAAA,EAAD,IAAgB,KAC/C,cAAC,EAAD,CAAOvE,MAAOsE,KAAKpI,MAAM8D,MACrBC,SAAUqE,KAAKpI,MAAM+D,SACrBC,gBAAiBoE,KAAKpI,MAAMgE,gBAC5BC,YAAamE,KAAKpI,MAAMiE,YACxBE,oBAAqBiE,KAAKpI,MAAMmE,oBAChCmB,cAAe8C,KAAK9C,cACpBwB,OAAQsB,KAAKpI,MAAM8G,OACnBD,SAAUuB,KAAKpI,MAAM6G,kB,GArBRyB,IAAMvI,WAwCpBwI,eACXC,aAZkB,SAACnH,GAAD,MAA8B,CAChDyC,MAAO4D,EAASrG,GAChB0C,SAAU8D,EAAYxG,GACtB2C,gBAAiB8D,EAAmBzG,GACpC4C,YAAa8D,EAAe1G,GAC5B6C,WAAY8D,EAAc3G,GAC1B8C,oBAAqB8D,EAAuB5G,MAMnB,CACrBsD,mBACAE,iBACA6C,SLoBoB,SAACjD,EAAcV,GAAf,8CAAoC,WAAOgB,GAAP,eAAAE,EAAA,6DAC5DF,EAASJ,GAAiB,IAC7BI,EAASF,EAAeJ,IAFuC,SAG1CgE,IAASf,SAASjD,EAAMV,GAHkB,OAGtD2E,EAHsD,OAIpD3D,EAASJ,GAAiB,IAC1BI,EAjBP,CAAE5D,KAAM,YAAa2C,MAiBI4E,EAAIxD,KAAKyD,QAC3B5D,EAVP,CAAE5D,KAAM,wBAAyB6C,gBAUE0E,EAAIxD,KAAK0D,aANe,2CAApC,uDKnBpB9B,OLqCc,SAACnG,GAAD,8CAAgB,WAAOoE,GAAP,eAAAE,EAAA,sDAC9BD,EAAYyD,IAAS3B,OAAO+B,KAAKJ,KACrC3D,EAAmBC,EAAUpE,EAAIqE,GAFC,2CAAhB,uDKpCd6B,SLyCgB,SAAClG,GAAD,8CAAgB,WAAOoE,GAAP,eAAAE,EAAA,sDAChCD,EAAYyD,IAAS5B,SAASgC,KAAKJ,KACvC3D,EAAmBC,EAAUpE,EAAIqE,GAFG,2CAAhB,yDK/CTuD,CAQbL,I,oBC/CaY,OAjCf,WAAkB,IAAD,EAEyBlG,oBAAS,GAFlC,mBAENmG,EAFM,KAEOC,EAFP,KAMTC,EAAQ,IAAIC,MAFN,gDAcV,OACI,sBAAK7G,UAAWC,KAAO6G,MAAvB,UACI,8BACI,qBAAK9G,UAAWC,KAAOE,KAAvB,iCAEJ,wBAAQ+D,QAAS,YAdD,IAAhBwC,GACAC,GAAe,GACfC,EAAMG,UAENJ,GAAe,GACfC,EAAMI,SASN,SAESN,EAA4B,8CAAd,oD,oBCApBO,GAlBqB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAElD,OAAO,wBAAQpH,UAAW0E,KAAE2C,OAArB,SACH,sBAAKrH,UAAW0E,KAAE4C,WAAlB,UAEQJ,EAAS,cAAC,IAAD,CAAa9G,MAAO,CAAEmH,OAAQ,SACjC,cAAC,IAAD,CAAanH,MAAO,CAAEmH,OAAQ,SAGpCL,EACM,gCAAMC,EAAN,MAAe,wBAAQjD,QAASkD,EAAjB,qBAAf,OACA,gCAAK,cAAC,IAAD,CAAS/G,GAAG,SAAZ,qBAAL,aCjBTmH,GAAgB,gBAIzBpJ,GAAe,CACfE,GAAI,KACJmJ,MAAO,KACPN,MAAO,KACPD,QAAQ,GAUCQ,GAAc,WAAsF,IAArF1I,EAAoF,uDAA3DZ,GAAca,EAA6C,uCAC5G,OAAQA,EAAOH,MACX,KAAK0I,GACD,OAAO,2BACAxI,GAAUC,EAAO0I,SAG5B,QACI,OAAO3I,IASN4I,GAAkB,SAC3BtJ,EACAmJ,EACAN,EACAD,GAJ2B,MAM1B,CAAEpI,KAAM0I,GAAeG,QAAS,CAAErJ,KAAImJ,QAAON,QAAOD,YAG5CW,GAAkB,yDAAoB,WAAOnF,GAAP,uBAAAE,EAAA,sEAC7BkF,IAAQC,KADqB,OAEnB,KADtB1B,EADyC,QAEvCxD,KAAKC,aAAmB,EACDuD,EAAIxD,KAAKA,KAA9BvE,EADqB,EACrBA,GAAImJ,EADiB,EACjBA,MAAON,EADU,EACVA,MACjBzE,EAASkF,GAAgBtJ,EAAImJ,EAAON,GAAO,KAJA,2CAApB,uDCrCzBa,G,4JAEF,WACI,OACI,cAAC,GAAD,CAAQd,OAAQnB,KAAKpI,MAAMuJ,OACvBC,MAAOpB,KAAKpI,MAAMwJ,MAClBC,OAAQrB,KAAKpI,MAAMyJ,a,GANLnB,IAAMvI,WAmBrByI,gBARS,SAACnH,GACrB,MAAO,CACHkI,OAAQlI,EAAMiJ,KAAKf,OACnBC,MAAOnI,EAAMiJ,KAAKd,SAKc,CAAEC,ODoCpB,kBAAoB,SAAC1E,GACvC,OAAOoF,IAAQV,SACVc,MAAK,SAAA7B,GACF8B,QAAQC,IAAI,UAAW/B,GACK,IAAxBA,EAAIxD,KAAKC,YACTJ,EAASkF,GAAgB,KAAM,KAAM,MAAM,UCzC5CzB,CAAqC6B,IC7BvCK,GAAsB,sBAG/BjK,GAAe,CACfkK,aAAa,GAiCFC,GA3BW,WAAmF,IAAlFvJ,EAAiF,uDAAzDZ,GAAca,EAA2C,uCACxG,OAAQA,EAAOH,MACX,KAAKuJ,GACD,OAAO,2BACArJ,GADP,IAEIsJ,aAAa,IAGrB,QACI,OAAOtJ,I,kKCLbwJ,GAAY,WAEd,IAAM9F,EAAW+F,cAFG,EAIElI,oBAAS,GAJX,mBAIbmI,EAJa,KAIRC,EAJQ,KAmBdC,EAASC,aAAU,CACrBC,cAAe,CACXrB,MAAO,0BACPsB,SAAU,YACVC,YAAY,GAEhBC,SAAU,SAACC,GACP,IAAMC,EAA8B,GAWpC,OAVKD,EAAOzB,MAEA,4CAA4C2B,KAAKF,EAAOzB,SAChE0B,EAAO1B,MAAQ,yBAFf0B,EAAO1B,MAAQ,WAIdyB,EAAOH,SAEDG,EAAOH,SAASzJ,OAAS,IAChC6J,EAAOJ,SAAW,gCAFlBI,EAAOJ,SAAW,WAIfI,GAEXE,SAAU,SAACH,GACPxG,EHEW,SAAC+E,EAAesB,EAAkBC,GAAlC,IAAuDM,EAAvD,+DAAyF,SAAC5G,GAC7G,OAAOoF,IAAQX,MAAMM,EAAOsB,EAAUC,EAAYM,GAC7CpB,MAAK,SAAA7B,GAC0B,IAAxBA,EAAIxD,KAAKC,YACTJ,EAASmF,UGNJ0B,CAAQL,EAAOzB,MAAOyB,EAAOH,SAAUG,EAAOF,gBAI/D,OACI,cAACQ,GAAA,EAAD,CAAMC,WAAS,EAACC,eAAgB,SAAhC,SACI,cAACF,GAAA,EAAD,CAAMrJ,MAAI,EAACuJ,eAAgB,SAA3B,SACI,sBAAML,SAAUT,EAAOe,aAAvB,SACI,cAACC,GAAA,EAAD,UACI,qBAAK5J,UAAW0E,KAAEmF,SAAlB,SACI,sBAAK7J,UAAW0E,KAAEoF,WAAlB,UACI,qBAAK9J,UAAW0E,KAAEqF,OAAlB,6BACA,qBAAK/J,UAAW0E,KAAEsF,OAAlB,sBACA,eAACC,GAAA,EAAD,CAAWjK,UAAW0E,KAAEwF,UAAxB,UACC,8BACG,cAACC,GAAA,EAAD,aAAW/J,MAAO,CAACgK,MAAO,SAAUpK,UAAW0E,KAAE2F,UAC3EC,MAAM,QACwB/C,OAAO,SACPgD,QAAQ,YACJ3B,EAAO4B,cAAc,WAGzB5B,EAAOO,OAAO1B,OACVmB,EAAO6B,QAAQhD,MACf,mBAAGzH,UAAW0E,KAAEgG,MAAhB,SAAwB9B,EAAOO,OAAO1B,QACpC,QAGV,8BACA,cAAC0C,GAAA,EAAD,yBAAW/J,MAAO,CAACgK,MAAO,SAAUpK,UAAW0E,KAAE2F,UACxEvL,KAAM4J,EAAG,WAAgB,OACE4B,MAAM,WACN/C,OAAO,SACPgD,QAAQ,YACJ3B,EAAO4B,cAAc,aAL7B,IAMIG,WAAY,CACRC,aACI,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,GAAA,EAAD,CACIC,aAAW,6BACX9G,QA3EhC,WAEZyE,GADAD,IAwEwC,SAIKA,EAAM,cAAC,KAAD,IAAoB,cAAC,KAAD,YAQ3CE,EAAOO,OAAOJ,UACVH,EAAO6B,QAAQ1B,SACf,mBAAG/I,UAAW0E,KAAEgG,MAAhB,SAAwB9B,EAAOO,OAAOJ,WACpC,QAGV,cAACkC,GAAA,EAAD,CAAkBX,MAAO,cACrBY,QACI,8BACI,cAACC,GAAA,EAAD,CACIC,SAAUxC,EAAOyC,aACjBC,MAAO1C,EAAOM,OAAOF,WACrBzK,KAAK,mBAErB,wBAAQyB,UAAW0E,KAAE6G,YAArB,oCAevBC,GAAQ,WAIjB,OAFeC,aAAuC,SAAAzM,GAAK,OAAIA,EAAMiJ,KAAKf,UAG/D,cAAC,IAAD,CAAU7G,GAAI,aAIrB,qBAAKL,UAAW0E,KAAEgH,UAAlB,SACI,cAAC,GAAD,OCjINC,GAAmB1F,IAAM2F,MAAK,kBAAM,iCACpCC,GAAmB5F,IAAM2F,MAAK,kBAAM,iCAQpCE,G,uKAEJ,WACE/F,KAAKpI,MAAMoO,kB,oBAGb,WACE,OAAKhG,KAAKpI,MAAM2K,YAQd,sBAAKtI,UAAU,cAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACE,cAAC,WAAD,CAAUgM,SAAU,cAAChG,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAU7L,GAAI,eACvC,cAAC,IAAD,CAAO4L,KAAK,aAAaC,QAAS,cAACL,GAAD,MAClC,cAAC,IAAD,CAAOI,KAAK,mBAAmBC,QAAS,cAACL,GAAD,MACxC,cAAC,IAAD,CAAOI,KAAK,aAAaC,QAAS,cAACP,GAAD,MAClC,cAAC,IAAD,CAAOM,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,oBAAI9L,MAAO,CAAE+L,UAAW,UAAxB,mCAC5B,cAAC,IAAD,CAAOF,KAAK,KAAKC,QAAS,cAAC,IAAD,CAAU7L,GAAG,oBAtBxC,qBACLD,MAAO,CAAE0K,SAAU,QAASsB,IAAK,MAAOD,UAAW,SAAU/B,MAAO,QAD/D,SAEL,cAACpE,EAAA,EAAD,U,GAVUtI,aA8CHwI,eACbC,aANsB,SAACnH,GAAD,MAA8B,CACpDsJ,YAAatJ,EAAMqN,IAAI/D,YACvBpB,OAAQlI,EAAMiJ,KAAKf,UAIM,CAAE6E,cF1CA,yDAAM,WAAOrJ,GAAP,eAAAE,EAAA,sEAEXF,EAASmF,MAFE,OAE3ByE,EAF2B,OAG/BC,QAAQC,IAAI,CAACF,IACb5J,EANqC,CAAE5D,KAAMuJ,KAEd,2CAAN,yDE2C3B5K,KAFayI,CAGb4F,IC5DaW,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCAVO,GAAcC,YAAgB,CAC9BC,YAAapO,KACbqO,YAAaC,KACb9H,UAAWxD,EACXkG,KAAMP,GACN2E,IAAK9D,KAgBI+E,GAAQC,YAAYN,GAAaO,YAAgBC,OCpB9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINO,SAASC,eAAe,SAQ1BrB,M,gCCzBA,mHAGMsB,EAHN,OAGiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAEL,UAAW,0CAKNhI,EAAW,CACpBf,SAAU,eAACzD,EAAD,uDAAe,EAAGF,EAAlB,uDAA6B,GAA7B,OACNqM,EAASM,IAAT,qBAA2BzM,EAA3B,kBAAgDF,KACpD+C,OAAQ,SAACnG,GAAD,OAAgByP,EAASO,OAAT,iBAA0BhQ,KAElDkG,SAAU,SAAClG,GAAD,OAAgByP,EAASQ,KAAT,iBAAwBjQ,MAIzCwJ,EAAU,CACnBC,GAAI,kBAAMgG,EAASM,IAAI,YAEvBlH,MAAO,SAACM,EAAesB,EAAkBC,GAAlC,IAAuDM,EAAvD,+DACHyE,EAASQ,KAAT,aAA4B,CAAE9G,QAAOsB,WAAUC,aAAYM,aAE/DlC,OAAQ,kBAAM2G,EAASO,OAAT,gBAGLE,EAAa,CACtBC,cAAe,SAACvM,GAAD,OAAoB6L,EAASM,IAAT,kBAAqCnM,KAExEwM,UAAW,SAACxM,GAAD,OAAoB6L,EAASM,IAAT,yBAA+BnM,KAE9DyM,aAAc,SAACzJ,GAAD,OAAoB6I,EAASa,IAAT,iBAA+B,CAAE1J,YAEnE2J,iBAPsB,SAOLC,GACb,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBf,EAASa,IAAT,gBAA8BG,EAAU,CAC3CX,QAAS,CACL,eAAgB,0BAI5Bc,YAjBsB,SAiBVC,GACR,OAAOpB,EAASa,IAAT,UAAwBO,M,mBCjDvCxP,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,sBAAsB,YAAc,6B,mBCA/QD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,uB,mBCAnDD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,0BAA0B,UAAY,yBAAyB,eAAiB,gC,gCCDpJ,6BAWeoG,IARG,WACd,OACI,sBAAKhG,UAAWC,IAAOmP,WAAvB,UAAsC,wBAAW,wBAAW,wBACxD,wBAAW,wBAAW,wBAAW,wBAAW,wBAC5C,wBAAW,wBAAW,oCAAY,6B,mBCN9CzP,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,WAAa,gC,mBCAnHD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,mUCGdyP,EAAW,WACXC,EAAuB,uBACvBC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cA+CvBrR,EAAiC,CACjCsR,MAAO,CACH,CAAEpR,GAAI,EAAGG,QAAS,SAAUkR,WAAY,IACxC,CAAErR,GAAI,EAAGG,QAAS,eAAgBkR,WAAY,IAC9C,CAAErR,GAAI,EAAGG,QAAS,KAAMkR,WAAY,IACpC,CAAErR,GAAI,EAAGG,QAAS,aAAckR,WAAY,KAEhDC,YAAa,GACbT,QAAS,KACTjK,OAAQ,IAuCC2K,EAAU,iBAAO,CAAE/Q,KAAMuQ,IAGzBS,EAAoB,SAACC,GAAD,MAC5B,CAAEjR,KAAMwQ,EAAsBU,QAASD,IAO/BE,EAAY,SAAC/K,GAAD,MACpB,CAAEpG,KAAM0Q,EAAYtK,WAMZgL,EAAiB,SAAChO,GAAD,8CAA+B,WAAOQ,GAAP,eAAAE,EAAA,sEACvC4L,IAAWC,cAAcvM,GADc,OACnDmE,EADmD,OAEzD3D,GAb2ByM,EAaH9I,EAAIxD,KAZ3B,CAAE/D,KAAMyQ,EAAkBJ,aAU8B,iCAX/B,IAACA,IAW8B,OAA/B,uDAKjBT,EAAY,SAACxM,GAAD,8CAAkC,WAAOQ,GAAP,eAAAE,EAAA,sEACrC4L,IAAWE,UAAUxM,GADgB,OACjDmE,EADiD,OAEvD3D,EAASuN,EAAU5J,EAAIxD,OAFgC,2CAAlC,uDAKZ8L,EAAe,SAACzJ,GAAD,8CAAkC,WAAOxC,GAAP,SAAAE,EAAA,sEACxC4L,IAAWG,aAAazJ,GADgB,OAE9B,IAF8B,OAElDrC,KAAKC,YACTJ,EAASuN,EAAU/K,IAHmC,2CAAlC,uDAOfiL,EAAY,SAACvL,GAAD,8CAAgC,WAAOlC,EAAU0N,GAAjB,eAAAxN,EAAA,6DAC/CV,EAASkO,IAAWnI,KAAK3J,GADsB,SAEnCkQ,IAAWK,iBAAiBjK,GAFO,OAGzB,IAHyB,OAG7C/B,KAAKC,YACTJ,EAASwN,EAAehO,IAJyB,2CAAhC,yDASZgN,EAAc,SAACC,GAAD,8CAAwC,WAAOzM,EAAU0N,GAAjB,eAAAxN,EAAA,6DAC5CwN,IAAWnI,KAAK3J,GAD4B,SAEzCkQ,IAAWU,YAAYC,GAFkB,UAI/B,KAFtB9I,EAFqD,QAInDxD,KAAKC,WAJ8C,+DAOhDyJ,QAAQ8D,OAAOhK,EAAIxD,KAAKyN,SAAS,KAPe,2CAAxC,yDAoBZjD,IAlGe,WAAyE,IAAxErO,EAAuE,uDAA/DZ,EAAca,EAAiD,uCAClG,OAAQA,EAAOH,MACX,KAAKwQ,EACD,OAAO,2BAAKtQ,GAAZ,IAAmB4Q,YAAa3Q,EAAO+Q,UAE3C,KAAKT,EACD,OAAO,2BAAKvQ,GAAZ,IAAmBmQ,QAASlQ,EAAOkQ,UAEvC,KAAKK,EACD,OAAO,2BAAKxQ,GAAZ,IAAmBkG,OAAQjG,EAAOiG,SAEtC,KAAKmK,EACD,IAAMkB,EAAU,CACZjS,GAAI,EACJG,QAASO,EAAM4Q,YACfD,WAAY,GAEhB,OAAO,2BACA3Q,GADP,IAEI0Q,MAAM,CAAEa,GAAH,mBAAevR,EAAM0Q,QAC1BE,YAAa,KAGrB,KAAKH,EACD,OAAO,2BAAKzQ,GAAZ,IAAmB0Q,MAAO1Q,EAAM0Q,MAAMrN,QAAO,SAAA8B,GAAC,OAAIA,EAAE7F,KAAOW,EAAOuR,YACtE,QACI,OAAOxR,M","file":"static/js/main.e1182a63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","\r\nimport React, { ComponentType } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n    function ComponentWithRouterProp(props: T) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n }\r\n \r\n","\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        { id: 1, name: 'Sonechka', src: 'https://sun2-10.userapi.com/s/v1/if1/w1y1anZFpf-CNhV-lyM8U6QCcnKkY164nwL0HkaM1FCU6CxDm4dQ3F0i9yR8ib5JCojY2P7X.jpg?size=100x0&quality=96&crop=58,0,339,339&ava=1' },\r\n        { id: 2, name: 'Maks', src: 'https://sun2-4.userapi.com/s/v1/ig2/tmGqC7l6DkVdw8p1o8raCVmvPtRmFeWjVODUXOn8ClIXSBpLUKtcascbdMK0i0qBhTs0aXgP7qSj-evbmXNdcL9X.jpg?size=100x0&quality=96&crop=26,6,1580,1580&ava=1' },\r\n        { id: 3, name: 'Dimych', src: 'https://sun2-4.userapi.com/s/v1/if1/WKIru_JWpP_NC33uxlLNSzN_FCVYF2ATJmiCUPBesjXHmmhm6r9zUDFCO0ewZ2F-RZC9qFYz.jpg?size=50x0&quality=96&crop=322,289,1006,1006&ava=1' },\r\n        { id: 4, name: 'Masha', src: 'https://sun2-3.userapi.com/s/v1/ig1/ZEoKnBuJ0WePJx9izTmq4QNH657mCi5IPIfuxZJGyaz-kWOF-CrCBqKT6FRZHfZ16xZsqYT7.jpg?size=100x0&quality=96&crop=160,0,759,759&ava=1' },\r\n        { id: 5, name: 'Ulya', src: 'https://sun2-3.userapi.com/s/v1/ig2/lxJkYCHND2QJIj6Y6CiLOIZn64fKd1lp2_pkoHGcLhi5ugP7zsKEcKpDSDVkWFsVWk_9JWws4VdRK05CIAZns7-j.jpg?size=100x0&quality=96&crop=0,274,1215,1215&ava=1' },\r\n        { id: 6, name: 'Ustina', src: 'https://sun9-59.userapi.com/impf/Xr5HIhSHG2Xn-b6EXFY0x1KMNfa5VpmofbNzlQ/cS6GLKimqdg.jpg?size=1080x1080&quality=96&sign=e702e7ebd20a8cddfbebd77957c00ecc&type=album' },\r\n        { id: 7, name: 'Sasha', src: 'https://sun2-9.userapi.com/s/v1/ig2/k-NYQ6bwT9zwVHoWsY9mEW35tf56gqKIZSogiC5qcE32xOlTKCMvn3poYzyhEn0fKrStu2jhWt6di522b1IjrWHb.jpg?size=100x0&quality=96&crop=12,12,200,200&ava=1' },\r\n        { id: 8, name: 'Vova', src: 'https://sun2-4.userapi.com/s/v1/ig1/X2AsqRo-dhkjrmbPk2fwjAJjQipXwXvaGtQFw42mSpDrZUYK5pR5AiM6HUwJktqkET6WctPB.jpg?size=100x0&quality=96&crop=615,256,588,588&ava=1' }\r\n    ] as Array<DialogsType>,\r\n    message: [ \r\n        { id: 1, avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Sasha', message: 'Hello, my friends', time: '22:00'\r\n    },\r\n    { id: 2, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Hi all', time: '22:07'\r\n    },\r\n    { id: 3, avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\r\n        name: 'Sonya', message: 'yo yo yo', time: '22:15'\r\n    },\r\n    { id: 4, avatar: 'https://top-tok.ru/wp-content/uploads/e8a52fc5-620c-4d7c-8f34-ddd8f605f95a.jpg',\r\n        name: 'Natali', message: 'How a you?', time: '22:17'\r\n    },\r\n    { id: 5, avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Everything is fine', time: '22:18'\r\n    },\r\n    { id: 6, avatar: 'https://i.pinimg.com/originals/38/20/44/382044ab16b8772d62a6043dc202bd86.jpg',\r\n        name: 'Galya', message: 'What do you do', time: '22:19'\r\n    },\r\n    { id: 7, avatar: 'https://papik.pro/uploads/posts/2022-01/thumbs/1642409371_29-papik-pro-p-gacha-stikeri-31.jpg',\r\n        name: 'Dima', message: 'I went out for a walk', time: '22:19'\r\n    },\r\n    { id: 8, avatar: 'https://yt3.ggpht.com/a/AATXAJwg1JVXn5R_VJH_tSFHvGrBbwGEfEW0yDUBAgDkag=s900-c-k-c0xffffffff-no-rj-mo',\r\n        name: 'Alina', message: 'I will sleep', time: '22:23'\r\n    }\r\n] as Array<MessageType>,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: DialogsActionsType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            const rand = Math.floor(Math.random() * state.message.length)\r\n            let min = new Date().getMinutes()\r\n\r\n            let newMessage: MessageType = {\r\n                id: 9,\r\n                avatar: state.message[rand].avatar,\r\n                name: state.message[rand].name,\r\n                message: action.title,\r\n                time: '15 :' + min\r\n        \r\n            }\r\n            return {\r\n                ...state,\r\n                message: [ ...state.message, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype addMessageType = ReturnType<typeof addMessage>\r\nexport const addMessage = (title: string) => ({ type: ADD_MESSAGE, title } as const)\r\n\r\n\r\nexport type DialogsActionsType = addMessageType\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsspinner\":\"Preloader_ldsspinner__2ajmc\",\"lds-spinner\":\"Preloader_lds-spinner__2eR9q\"};","import React from 'react'\r\nimport { FaCogs, FaCommentDots, FaFacebookMessenger, FaMusic, FaRegCalendarAlt, FaRegUserCircle, FaUsers } from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={styles.nav}>\r\n            <div className={styles.item} >\r\n               <FaRegUserCircle style={styleIcon} />\r\n                <NavLink to=\"/profile/\">Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n              <FaFacebookMessenger style={styleIcon} />\r\n              {/* <FaCommentDots /> */}\r\n                <NavLink to=\"/dialogs/\">Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n             <FaMusic style={styleIcon} />\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <FaUsers style={styleIcon} />\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <FaCogs style={styleIcon} />\r\n                <NavLink to=\"/setting\">Setting</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n               <FaRegCalendarAlt style={styleIcon} />\r\n                <NavLink to=\"/calendar\">Сalendar</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet styleIcon: React.CSSProperties = {\r\n    color: 'rgb(56, 0, 0)'\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Calendar() {\r\n\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [ , setCounter] = useState(0)\r\n    const [date, setDate] = useState<Date>()\r\n    \r\n    const stringTime = date?.toLocaleTimeString() || <br /> // fix with date\r\n    const stringDate = date?.toLocaleDateString()\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date())\r\n            setCounter(state => state + 1)\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            {/* <h1> {day} {month}  </h1> */}\r\n            <div \r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                <h2 style={{ marginTop: '0px', color: 'black' }}\r\n                > {stringTime}\r\n                </h2>\r\n            </div>\r\n            {show ? (\r\n                <div>\r\n                    <h1> {stringDate} </h1>\r\n                </div>\r\n            ) : <br />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Calendar;\r\n","import { usersAPI } from \"../api/api\"\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos?: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>  //array of users ids\r\n};\r\n\r\nexport type UsersReducerType = typeof initialState\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case 'TOGGLE_FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case 'SET_USERS': {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype ActionsType =\r\n    ToggleFollowType |\r\n    setUsersType |\r\n    setCurrentPageType |\r\n    setUsersTotalCountType |\r\n    toggleIsFetchingType |\r\n    toggleIsFollowingProgressType\r\n\r\ntype ToggleFollowType = ReturnType<typeof toggleFollow>\r\nexport const toggleFollow = (userId: number) =>\r\n    ({ type: 'TOGGLE_FOLLOW', userId } as const)\r\n\r\ntype toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const)\r\n\r\ntype toggleIsFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (userId: number, isFetching: boolean) =>\r\n    ({ type: 'TOGGLE_IS_FOLLOWING_PROGRESS', userId, isFetching } as const)\r\n\r\ntype setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({ type: 'SET_USERS', users } as const)\r\n\r\ntype setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) =>\r\n    ({ type: 'SET_CURRENT_PAGE', page } as const)\r\n\r\ntype setUsersTotalCountType = ReturnType<typeof setUsersTotalCount>\r\nexport const setUsersTotalCount = (totalUsersCount: number) =>\r\n    ({ type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const)\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n\tdispatch(setCurrentPage(page))\r\n    const res = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(res.data.items));\r\n            dispatch(setUsersTotalCount(res.data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any) => {\r\n    dispatch(toggleFollowingProgress(id, true))\r\n    const res = await apiMethod(id)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(toggleFollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(id, false))\r\n} \r\n\r\nexport const follow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\nexport const unfollow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer\r\n","\r\nimport React, { useState } from 'react'\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage?: number\r\n    portionSize?: number\r\n}\r\nconst Paginator: React.FC<PaginatorPropsType> = (\r\n    {\r\n        pageSize, totalItemsCount, onPageChanged,\r\n        currentPage, portionSize = 20,\r\n    }\r\n) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    \r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        {/* <button onClick={(e) => { onPageChanged(1)}} >{'<<'}</button> */}\r\n        <button className={styles.buttonPrev}\r\n        style={{opacity:  portionNumber < 2 ? '0.4' : ''}}\r\n            disabled={portionNumber < 2}\r\n            onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n        >\r\n           {'<PREV'}\r\n        </button>\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <button \r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</button>\r\n            })}\r\n        <button className={styles.buttonNext}\r\n        style={{opacity:  portionCount < portionNumber + 1 ? '0.4' : ''}}\r\n            disabled={portionCount < portionNumber + 1}\r\n            onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n        >\r\n            {'NEXT>'}\r\n        </button>\r\n        {/* <button onClick={(e) => { onPageChanged(pagesCount)}}  >{'>>'}</button> */}\r\n    </div>\r\n}\r\n\r\nexport default Paginator\r\n","\r\nimport React from 'react';\r\nimport s from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return <div className={s.userBlock}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`} >\r\n                    <img src={user.photos?.small != null ? user.photos?.small : userPhoto}\r\n                        className={s.userPhoto} alt='profilePhoto' />\r\n                </NavLink>\r\n            </div>\r\n            <div >\r\n                \r\n                {user.followed\r\n                    ? <button className={s.gradientButton} disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}\r\n                    > Unfollow </button>\r\n                    : <button className={s.gradientButton} disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}\r\n                    > Follow </button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status || <br /> } </div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n","\r\nimport React from 'react';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport s from './users.module.css';\r\nimport User from './User';\r\n\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (\r\n    {\r\n        currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n        ...props\r\n    }) => {\r\n    return <div>\r\n        <Paginator pageSize={pageSize} currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount} onPageChanged={onPageChanged}\r\n        />\r\n\r\n\r\n\r\n        <div className={s.usersBlock} >\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"./redux-store\";\r\nimport { UserType } from \"./users-reducer\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users: Array<UserType>) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage;\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress;\r\n\r\n","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage,\r\n    UserType,\r\n    toggleIsFetching,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    setCurrentPage: (pageNumber: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<any, UsersPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    };\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const pageSize = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        toggleIsFetching,\r\n        setCurrentPage,\r\n        getUsers: requestUsers ,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer)\r\n","import React, { useState } from 'react';\r\nimport styles from './Music.module.css'\r\n\r\n\r\nfunction Music() {\r\n\r\n    const [switchOnOff, setSwitchOnOff] = useState(false)\r\n\r\n    let url = \"http://streaming.tdiradio.com:8000/house.mp3\";\r\n\r\n    let audio = new Audio(url);\r\n\r\n    const handleOnOffClick = () => {\r\n        if (switchOnOff === false) {\r\n            setSwitchOnOff(true)\r\n            audio.pause()\r\n        } else {\r\n            setSwitchOnOff(false)\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pleer}>\r\n            <div>\r\n                <div className={styles.item}>Radio📻</div>\r\n            </div>\r\n            <button onClick={() => handleOnOffClick()} >\r\n                {\r\n                    !switchOnOff ? <h2>▶️</h2> : <h2>⏸️</h2>\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport { FaUserCheck, FaUserMinus } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({ isAuth, login, logout }) => {\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            {\r\n                isAuth ? <FaUserCheck style={{ margin: '4px' }} />\r\n                    : <FaUserMinus style={{ margin: '4px' }} />\r\n            }\r\n            {\r\n                isAuth\r\n                    ? <div>{login} - <button onClick={logout}>Log out</button> </div>\r\n                    : <div><NavLink to='/login' > Login </NavLink> </div>\r\n            }\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header\r\n","\r\nimport { authAPI } from \"../api/api\";\r\nimport { AppThunkType } from \"./redux-store\";\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: AuthActionsType): authReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\ntype setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n) =>\r\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } } as const)\r\n\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch) => {\r\n    const res = await authAPI.me();\r\n    if (res.data.resultCode === 0) {\r\n        let { id, email, login } = res.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha = false): AppThunkType => (dispatch) => {\r\n    return authAPI.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n\r\n}\r\nexport const logout = (): AppThunkType => (dispatch) => {\r\n    return authAPI.logout()\r\n        .then(res => {\r\n            console.log('in then', res)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type AuthActionsType = setAuthUserDataType\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport Header from './Header'\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any, PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import { getAuthUserData } from './auth-reducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\ntype AppReducerType = typeof initialState\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionsType): AppReducerType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const)\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\nexport type AppActionsType = initializedSuccessType\r\n\r\nexport default appReducer\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.css'\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, TextField } from \"@mui/material\";\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [eye, setEye] = useState(true)\r\n    const handleClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true)\r\n        }\r\n    }\r\n\r\n    type ValuesType = {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'maksimkander1@gmail.com',\r\n            password: 'MAKS12345',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<ValuesType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 characters or more';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values: ValuesType) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n        },\r\n    })\r\n\r\n    return (\r\n        <Grid container justifyContent={'center'}>\r\n            <Grid item justifyContent={'center'}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl >\r\n                        <div className={s.loginBox}>\r\n                            <div className={s.inputField}>\r\n                                <div className={s.social}> Social-Network</div>\r\n                                <div className={s.signIn}> Sign In</div>\r\n                                <FormGroup className={s.formGroup}>\r\n                                 <p> \r\n                                    <TextField style={{width: '343px'}} className={s.textField} \r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"standard\"\r\n                                        {...formik.getFieldProps('email')} />\r\n                                       \r\n                                    {\r\n                                        formik.errors.email &&\r\n                                            formik.touched.email ?\r\n                                            <p className={s.error}>{formik.errors.email}</p>\r\n                                            : null\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t</p>\r\n                                    <p>\r\n                                    <TextField style={{width: '343px'}} className={s.textField} \r\n\t\t\t\t\t\t\t\t\t    type={eye ? `password` : 'text'}\r\n                                        label=\"Password\"\r\n                                        margin=\"normal\"\r\n                                        variant=\"standard\"\r\n                                        {...formik.getFieldProps('password')}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleClick}\r\n                                                    >\r\n                                                        {eye ? <VisibilityOff /> : <Visibility />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                                    /> \r\n                                   \r\n                                    {\r\n                                        formik.errors.password &&\r\n                                            formik.touched.password ?\r\n                                            <p className={s.error}>{formik.errors.password}</p>\r\n                                            : null\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t </p>\r\n                                    <FormControlLabel label={'Remember me'}\r\n                                        control={\r\n                                            <div  >\r\n                                                <Checkbox\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.rememberMe}\r\n                                                    name=\"rememberMe\" />\r\n                                            </div>} />\r\n                                    <button className={s.loginButton}>\r\n                                        Login\r\n                                    </button>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </FormControl>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginForm}>\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, ComponentType, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Music from './components/Music/Music';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport { withRouter } from './hoc/WithRouter'\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { Login } from './components/Login/Login';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\ntype PropsType = {\r\n  initializeApp: () => void\r\n  initialized: boolean\r\n  isAuth: boolean\r\n}\r\n\r\nclass App extends Component<PropsType, PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div\r\n        style={{ position: 'fixed', top: '30%', textAlign: 'center', width: '100%' }}>\r\n        <Preloader />\r\n      </div>\r\n    }\r\n  \r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Suspense fallback={<Preloader />}>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path='/' element={<Navigate to={\"/profile\"} />} />\r\n              <Route path=\"/profile/*\" element={<ProfileContainer />} />\r\n              <Route path=\"/profile/:userId\" element={<ProfileContainer />} />\r\n              <Route path=\"/dialogs/*\" element={<DialogsContainer />} />\r\n              <Route path=\"/users\" element={<UsersContainer />} />\r\n              <Route path=\"/calendar\" element={<Calendar />} />\r\n              <Route path=\"/music\" element={<Music />} />\r\n              <Route path=\"/404\" element={<h1 style={{ textAlign: 'center' }} >404: PAGE NOT FOUND</h1>} />\r\n              <Route path=\"/*\" element={<Navigate to='404' />} />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n  initialized: state.app.initialized,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter,\r\n)(App)\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionsType, authReducer } from './auth-reducer';\r\nimport { usersReducer } from './users-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionsType } from \"./dialogs-reducer\";\r\nimport profileReducer, { ProfileActionsType } from \"./profile-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport appReducer, { AppActionsType } from './app-reducer';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AllActionsType =\r\n    AppActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | AuthActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { store } from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { ProfileType } from './../redux/profile-reducer';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        // 'API-KEY': 'd885d4a3-64ff-4a70-8cfb-d6db15bc8bae'\r\n        'API-KEY': '92a851fe-fc48-452f-b6b6-b08cb1364d0d'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 15) =>\r\n        instance.get(`users?page=${currentPage}&count=${pageSize}`),\r\n    follow: (id: number) => instance.delete(`follow/${id}`),\r\n\r\n    unfollow: (id: number) => instance.post(`follow/${id}`),\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me: () => instance.get('auth/me'),\r\n\r\n    login: (email: string, password: string, rememberMe: boolean, captcha = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha }),\r\n\r\n    logout: () => instance.delete(`auth/login`),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfie: (userId: number) => instance.get<ProfileType>(`profile/${userId}`),\r\n\r\n    getStatus: (userId: number) => instance.get(`profile/status/${userId}`),\r\n\r\n    updateStatus: (status: string) => instance.put(`profile/status`, { status }),\r\n\r\n    saveProfilePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__qumOe\",\"loginBox\":\"Login_loginBox__j-A02\",\"inputField\":\"Login_inputField__2TFka\",\"formGroup\":\"Login_formGroup__wG8dF\",\"error\":\"Login_error__HD0v0\",\"social\":\"Login_social__2pqId\",\"signIn\":\"Login_signIn__1SGtm\",\"loginButton\":\"Login_loginButton__1q5R1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fll_\",\"item\":\"Navbar_item__166Pj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__IH2zC\",\"usersBlock\":\"users_usersBlock__ZeHVP\",\"userBlock\":\"users_userBlock__1ioSy\",\"gradientButton\":\"users_gradientButton__1OKQw\"};","import styles from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.ldsspinner}   ><div></div><div></div><div></div>\r\n            <div></div><div></div><div></div><div></div><div></div>\r\n            <div></div><div></div><div> </div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1gSQb\",\"buttonPrev\":\"Paginator_buttonPrev__2_aIG\",\"buttonNext\":\"Paginator_buttonNext__2x3-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pleer\":\"Music_pleer__2ayyf\",\"item\":\"Music_item__1eXWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H_o5P\"};","import { profileAPI } from \"../api/api\"\r\nimport { AppThunkType } from \"./redux-store\"\r\n\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype PhotosType = {\r\n    small?: string\r\n    large?: string\r\n    //large: any\r\n}\r\n\r\nexport type ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n\r\n}\r\n\r\nexport type initialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    status: string\r\n    profile: ProfileType | null\r\n}\r\n\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Yo\", likesCount: 23 },\r\n        { id: 2, message: \"I'm in to IT\", likesCount: 12 },\r\n        { id: 3, message: \"I'\", likesCount: 57 },\r\n        { id: 4, message: \"I'm a BOSS\", likesCount: 23 }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.newText }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\ntype AddPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => ({ type: ADD_POST } as const)\r\n\r\ntype UpdateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (text: string) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\r\n\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: ProfileType) =>\r\n    ({ type: SET_USER_PROFILE, profile } as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (status: string) =>\r\n    ({ type: SET_STATUS, status } as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({ type: DELETE_POST, postId } as const)\r\n\r\n\r\nexport const getUserProfile = (userId: any): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getUserProfie(userId)\r\n    dispatch(setUserProfile(res.data));\r\n}\r\n\r\nexport const getStatus = (userId: number): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    const res = await profileAPI.updateStatus(status)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (photos: File): AppThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const res = await profileAPI.saveProfilePhoto(photos)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (profile: ProfileType): AppThunkType => async (dispatch, getState) => {\r\n        const userId = getState().auth.id;\r\n        const res = await profileAPI.saveProfile(profile);\r\n    \r\n        if (res.data.resultCode === 0) {\r\n            // dispatch(getUserProfile(userId));\r\n        } else {\r\n            return Promise.reject(res.data.messages[0]);\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostType\r\n    | UpdateNewPostTextType\r\n    | SetUserProfileType\r\n    | SetStatusType\r\n    | DeletePostType\r\n\r\nexport default profileReducer\r\n"],"sourceRoot":""}