{"version":3,"sources":["components/Users/users.module.css","components/common/Preloader/Preloader.module.css","components/Dialogs/AlternativeMessage/AlternativeMessage.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Calendar/Calendar.tsx","api/api.ts","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","assets/images/user.png","components/Users/User.tsx","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialodsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AlternativeMessage/AlternativeMessage.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","hoc/WithRouter.tsx","components/Profile/ProfileContainer.tsx","components/Music/Music.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/common/Paginator/Paginator.module.css","components/Login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Music/Music.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","styles","nav","item","active","to","Calendar","useState","show","setShow","setCounter","date","setDate","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","useEffect","setInterval","Date","state","style","display","flexDirection","alignItems","onMouseEnter","onMouseLeave","marginTop","color","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","id","delete","unfollow","post","authAPI","email","password","rememberMe","captcha","profileAPI","userId","status","put","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","usersReducer","action","type","map","u","followed","page","filter","toggleIsFetching","toggleFollowingProgress","setCurrentPage","followUnfollowFlow","dispatch","apiMethod","a","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","buttonPrev","disabled","onClick","p","selectedPage","pageNumber","e","buttonNext","User","user","src","photos","small","userPhoto","alt","some","name","Users","props","Preloader","ldsspinner","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","connect","items","totalCount","bind","ADD_MESSAGE","dialogs","message","avatar","time","dialogsReducer","rand","floor","random","length","min","getMinutes","newMessage","title","DialogItem","path","dialog","Message","s","angle","description","text","AlternativeMessage","setTitle","addMessage","setTimeout","scroll","current","scrollIntoView","behavior","placeholder","value","onChange","event","currentTarget","onKeyPress","charCode","Dialogs","dialogsElements","d","messageElements","m","useRef","dialogsItems","overflow","height","ref","margin","mapStateToPropsForRedirect","isAuth","auth","WithAuthRedirect","RedirectComponent","withAuthRedirect","dialogsPage","ProfileStatus","editMode","setEditMode","setStatus","onDoubleClick","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","large","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","profileReducer","newText","newPost","postId","buttonStyle","border","outline","cursor","font","Post","likes","setLikes","likeIt","setLikeIt","console","log","MyPosts","memo","postElements","updateNewPostText","textarea","addPost","button","MyPostsContainer","profilePage","Profile","content","withRouter","location","useLocation","navigate","useNavigate","params","useParams","router","authorizedUserId","getUserProfile","getStatus","Music","switchOnOff","setSwitchOnOff","audio","Audio","pleer","pause","play","Header","header","loginBlock","login","logout","SET_USER_DATA","authReducer","payload","setAuthUserData","getAuthUserData","HeaderContainer","res","loginSchema","Yup","shape","max","required","LoginForm","useDispatch","initialValues","validationSchema","onSubmit","values","loginTC","isSubmitting","errors","component","Login","useSelector","loginForm","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","element","DialogsContainer","textAlign","position","top","width","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdde9caa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__IH2zC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsspinner\":\"Preloader_ldsspinner__2ajmc\",\"lds-spinner\":\"Preloader_lds-spinner__2eR9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"AlternativeMessage_items__3Zmak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3_7KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Mq8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fll_\",\"item\":\"Navbar_item__166Pj\",\"active\":\"Navbar_active__25wbV\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n        <div className={styles.nav}>\r\n            <div className={`${styles.item} ${styles.active}`} >\r\n                <NavLink to=\"/profile/\">Profile</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/dialogs/\">Messages</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/setting\">Setting</NavLink>\r\n            </div>\r\n            <div className={`${styles.item} ${styles.active}`}>\r\n                <NavLink to=\"/calendar\">Сalendar</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Calendar() {\r\n\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [ , setCounter] = useState(0)\r\n    const [date, setDate] = useState<Date>()\r\n    \r\n    const stringTime = date?.toLocaleTimeString() || <br /> // fix with date\r\n    const stringDate = date?.toLocaleDateString()\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date())\r\n            setCounter(state => state + 1)\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            {/* <h1> {day} {month}  </h1> */}\r\n            <div \r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                <h2 style={{ marginTop: '0px', color: 'black' }}\r\n                > {stringTime}\r\n                </h2>\r\n            </div>\r\n            {show ? (\r\n                <div>\r\n                    <h1> {stringDate} </h1>\r\n                </div>\r\n            ) : <br />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Calendar;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"d885d4a3-64ff-4a70-8cfb-d6db15bc8bae\"\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 10) => instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data),\r\n    follow: (id: number) => instance.delete(`follow/${id}`)\r\n        .then(response => response.data),\r\n    unfollow: (id: number) => instance.post(`follow/${id}`)\r\n        .then(response => response.data),\r\n}\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me: () => instance.get('auth/me')\r\n        .then(response => response.data),\r\n    login: (email: string, password: number, rememberMe: boolean, captcha = false) =>\r\n        instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(response => response.data),\r\n    logout: () => instance.delete(`auth/login`)\r\n        .then(response => response.data),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfie: (userId: number) => instance.get(`profile/${userId}`)\r\n        .then(response => response.data),\r\n    getStatus: (userId: number) => instance.get(`profile/status/${userId}`)\r\n        .then(response => response.data),\r\n    updateStatus: (status: string) => instance.put(`profile/status`, { status: status })\r\n        .then(response => response.data),\r\n\r\n}\r\n\r\n","import { usersAPI } from \"../api/api\"\r\n\r\n\r\nexport const TOGGLE_FOLLOW = 'TOGGLE_FOLLOW'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos?: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>  //array of users ids\r\n};\r\n\r\nexport type UsersReducerType = typeof initialState\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsType): UsersReducerType => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: [...action.users] }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype ActionsType =\r\n    ToggleFollowType |\r\n    setUsersType |\r\n    setCurrentPageType |\r\n    setUsersTotalCountType |\r\n    toggleIsFetchingType |\r\n    toggleIsFollowingProgressType\r\n\r\ntype ToggleFollowType = ReturnType<typeof toggleFollow>\r\nexport const toggleFollow = (userId: number) =>\r\n    ({ type: TOGGLE_FOLLOW, userId } as const)\r\n\r\ntype toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({ type: TOGGLE_IS_FETCHING, isFetching } as const)\r\n\r\ntype toggleIsFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (userId: number, isFetching: boolean) =>\r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, userId, isFetching } as const)\r\n\r\ntype setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({ type: SET_USERS, users } as const)\r\n\r\ntype setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) =>\r\n    ({ type: SET_CURRENT_PAGE, page } as const)\r\n\r\ntype setUsersTotalCountType = ReturnType<typeof setUsersTotalCount>\r\nexport const setUsersTotalCount = (totalUsersCount: number) =>\r\n    ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount } as const)\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n\tdispatch(setCurrentPage(page))\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, id: number, apiMethod: any) => {\r\n    dispatch(toggleFollowingProgress(id, true))\r\n    const data = await apiMethod(id)\r\n            if (data.resultCode === 0) {\r\n                dispatch(toggleFollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(id, false))\r\n} \r\n\r\nexport const follow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\nexport const unfollow = (id: number) => async (dispatch: any) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, id, apiMethod)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer\r\n","\r\nimport React, { useState } from 'react'\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage?: number\r\n    portionSize?: number\r\n}\r\nconst Paginator: React.FC<PaginatorPropsType> = (\r\n    {\r\n        pageSize, totalItemsCount, onPageChanged,\r\n        currentPage, portionSize = 20,\r\n    }\r\n) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        <button className={styles.buttonPrev}\r\n            disabled={portionNumber < 2}\r\n            onClick={() => { setPortionNumber(portionNumber - 1) }}\r\n        >\r\n            PREV\r\n        </button>\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        <button className={styles.buttonNext}\r\n            disabled={portionCount < portionNumber + 1}\r\n            onClick={() => { setPortionNumber(portionNumber + 1) }}\r\n        >\r\n            NEXT\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator\r\n","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","\r\nimport React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({ user, followingInProgress, unfollow, follow }\r\n    ) => {\r\n\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`} >\r\n                    <img src={user.photos?.small != null ? user.photos?.small : userPhoto}\r\n                        className={styles.userPhoto} alt='profilePhoto' />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}\r\n                    > Unfollow </button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}\r\n                    > Follow </button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n\r\n}\r\n\r\nexport default User;\r\n","\r\nimport React from 'react';\r\nimport { UserType } from '../../redux/users-reducer';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (\r\n    {\r\n        currentPage, totalUsersCount,\r\n        pageSize, onPageChanged, users,\r\n        ...props\r\n    }) => {\r\n    return <div>\r\n        <Paginator pageSize={pageSize} currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount} onPageChanged={onPageChanged}\r\n        />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u} key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import styles from './Preloader.module.css'\r\n\r\n\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={styles.ldsspinner}   ><div></div><div></div><div></div>\r\n            <div></div><div></div><div></div><div></div><div></div>\r\n            <div></div><div></div><div> </div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppRootStateType } from \"./redux-store\";\r\nimport { UserType } from \"./users-reducer\";\r\n\r\nconst getUsersSelector = (state: AppRootStateType) => state.usersPage.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users: Array<UserType>) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state: AppRootStateType) => state.usersPage.pageSize;\r\n\r\nexport const getTotalUsersCount = (state: AppRootStateType) => state.usersPage.totalUsersCount;\r\n\r\nexport const getCurrentPage = (state: AppRootStateType) => state.usersPage.currentPage;\r\n\r\nexport const getIsFetching = (state: AppRootStateType) => state.usersPage.isFetching;\r\n\r\nexport const getFollowingInProgress = (state: AppRootStateType) => state.usersPage.followingInProgress;\r\n\r\n","import React, { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage,\r\n    UserType,\r\n    toggleIsFetching,\r\n    requestUsers,\r\n    follow,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    setCurrentPage: (pageNumber: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<any, UsersPropsType> {\r\n    componentDidMount() {\r\n\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    };\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const pageSize = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <> {this.props.isFetching ? <Preloader /> : null}\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        toggleIsFetching,\r\n        setCurrentPage,\r\n        getUsers: requestUsers ,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer)\r\n","\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\nexport type DialogsReducerType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet initialState: DialogsReducerType = {\r\n    dialogs: [\r\n        { id: 1, name: 'Sofiyka', src: 'https://sun2-10.userapi.com/s/v1/if1/w1y1anZFpf-CNhV-lyM8U6QCcnKkY164nwL0HkaM1FCU6CxDm4dQ3F0i9yR8ib5JCojY2P7X.jpg?size=100x0&quality=96&crop=58,0,339,339&ava=1' },\r\n        { id: 2, name: 'Maks', src: 'https://sun2-4.userapi.com/s/v1/ig2/tmGqC7l6DkVdw8p1o8raCVmvPtRmFeWjVODUXOn8ClIXSBpLUKtcascbdMK0i0qBhTs0aXgP7qSj-evbmXNdcL9X.jpg?size=100x0&quality=96&crop=26,6,1580,1580&ava=1' },\r\n        { id: 3, name: 'Dimych', src: 'https://sun2-4.userapi.com/s/v1/if1/WKIru_JWpP_NC33uxlLNSzN_FCVYF2ATJmiCUPBesjXHmmhm6r9zUDFCO0ewZ2F-RZC9qFYz.jpg?size=50x0&quality=96&crop=322,289,1006,1006&ava=1' },\r\n        { id: 4, name: 'Masha', src: 'https://sun2-3.userapi.com/s/v1/ig1/ZEoKnBuJ0WePJx9izTmq4QNH657mCi5IPIfuxZJGyaz-kWOF-CrCBqKT6FRZHfZ16xZsqYT7.jpg?size=100x0&quality=96&crop=160,0,759,759&ava=1' },\r\n        { id: 5, name: 'Ulya', src: 'https://sun2-3.userapi.com/s/v1/ig2/lxJkYCHND2QJIj6Y6CiLOIZn64fKd1lp2_pkoHGcLhi5ugP7zsKEcKpDSDVkWFsVWk_9JWws4VdRK05CIAZns7-j.jpg?size=100x0&quality=96&crop=0,274,1215,1215&ava=1' },\r\n        { id: 6, name: 'Ustina', src: 'https://sun9-59.userapi.com/impf/Xr5HIhSHG2Xn-b6EXFY0x1KMNfa5VpmofbNzlQ/cS6GLKimqdg.jpg?size=1080x1080&quality=96&sign=e702e7ebd20a8cddfbebd77957c00ecc&type=album' },\r\n        { id: 7, name: 'Sasha', src: 'https://sun2-9.userapi.com/s/v1/ig2/k-NYQ6bwT9zwVHoWsY9mEW35tf56gqKIZSogiC5qcE32xOlTKCMvn3poYzyhEn0fKrStu2jhWt6di522b1IjrWHb.jpg?size=100x0&quality=96&crop=12,12,200,200&ava=1' },\r\n        { id: 8, name: 'Vova', src: 'https://sun2-4.userapi.com/s/v1/ig1/X2AsqRo-dhkjrmbPk2fwjAJjQipXwXvaGtQFw42mSpDrZUYK5pR5AiM6HUwJktqkET6WctPB.jpg?size=100x0&quality=96&crop=615,256,588,588&ava=1' }\r\n    ] as Array<DialogsType>,\r\n    message: [ \r\n        {\r\n        id: 1,\r\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Sasha', message: 'Hello, my friends', time: '22:00'\r\n    },\r\n    {\r\n        id: 2,\r\n        avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Hi all', time: '22:07'\r\n    },\r\n    {\r\n        id: 3,\r\n        avatar: 'https://i.pinimg.com/564x/56/2f/9c/562f9cbde8be047a6b3ca16927cbc75b.jpg',\r\n        name: 'Sonya', message: 'yo yo yo', time: '22:15'\r\n    },\r\n    {\r\n        id: 4,\r\n        avatar: 'https://top-tok.ru/wp-content/uploads/e8a52fc5-620c-4d7c-8f34-ddd8f605f95a.jpg',\r\n        name: 'Natali', message: 'How a you?', time: '22:17'\r\n    },\r\n    {\r\n        id: 5,\r\n        avatar: 'https://i.pinimg.com/564x/69/07/a3/6907a3ecd829ce41a9fee86479597a39.jpg',\r\n        name: 'Maksim', message: 'Everything is fine', time: '22:18'\r\n    },\r\n    {\r\n        id: 6,\r\n        avatar: 'https://i.pinimg.com/originals/38/20/44/382044ab16b8772d62a6043dc202bd86.jpg',\r\n        name: 'Galya', message: 'What do you do', time: '22:19'\r\n    },\r\n    {\r\n        id: 7,\r\n        avatar: 'https://papik.pro/uploads/posts/2022-01/thumbs/1642409371_29-papik-pro-p-gacha-stikeri-31.jpg',\r\n        name: 'Dima', message: 'I went out for a walk', time: '22:19'\r\n    },\r\n    {\r\n        id: 8,\r\n        avatar: 'https://yt3.ggpht.com/a/AATXAJwg1JVXn5R_VJH_tSFHvGrBbwGEfEW0yDUBAgDkag=s900-c-k-c0xffffffff-no-rj-mo',\r\n        name: 'Alina', message: 'I will sleep', time: '22:23'\r\n    }\r\n] as Array<MessageType>,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsReducerType = initialState, action: DialogsActionsType): DialogsReducerType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n\r\n            const rand = Math.floor(Math.random() * state.message.length)\r\n            let min = new Date().getMinutes()\r\n\r\n            let newMessage: MessageType = {\r\n                id: 9,\r\n                avatar: state.message[rand].avatar,\r\n                name: state.message[rand].name,\r\n                message: action.title,\r\n                time: '15 :' + min\r\n        \r\n            }\r\n            return {\r\n                ...state,\r\n                message: [ ...state.message, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype addMessageType = ReturnType<typeof addMessage>\r\nexport const addMessage = (title: string) => ({ type: ADD_MESSAGE, title } as const)\r\n\r\n\r\nexport type DialogsActionsType = addMessageType\r\n\r\n\r\nexport default dialogsReducer","import { NavLink } from 'react-router-dom'\r\nimport styles from './../Dialogs.module.css'\r\n\r\ntype DialodsItemPropsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialodsItemPropsType) => {\r\n\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog + ' ' + styles.active}>\r\n            <img src={props.src} alt='ava' />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem\r\n\r\n\r\n","import s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    id?: number\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: any\r\n}\r\n\r\n\r\nconst Message = (props: PropsType) => {\r\n\r\n    return (\r\n        <div className={s.display}>\r\n            <div className={s.message}>\r\n                <img src={props.avatar} alt={'avatar'} />\r\n\r\n                <div className={s.angle} />\r\n\r\n                <div className={s.description}>\r\n                    <div className={s.name}>{props.name}</div>\r\n                    <div className={s.text}>{props.message}</div>\r\n                    <span className={s.time}>{props.time}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message\r\n\r\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\r\nimport s from './AlternativeMessage.module.css'\r\n\r\ntype PropsType = {\r\n    addMessage: (title: string) => void\r\n    scroll: any\r\n}\r\n\r\nfunction AlternativeMessage(props: PropsType) {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const addMessage = () => {\r\n        props.addMessage(title)\r\n        setTitle('')\r\n        setTimeout(() => {\r\n            props.scroll.current.scrollIntoView({ behavior: 'smooth' })\r\n        }, 0)\r\n    }\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addMessage()\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={s.items} >\r\n             <input type='text'\r\n                 placeholder=' New message...'\r\n                    value={title}\r\n                    onChange={onChangeHandler}\r\n                    onKeyPress={onKeyPressHandler}\r\n                     />\r\n                <button onClick={addMessage} >Send</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AlternativeMessage\r\n","\r\nimport React from 'react'\r\nimport DialogItem from './DialodsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport s from './Dialogs.module.css'\r\nimport { DialogsType, MessageType } from '../../redux/dialogs-reducer';\r\nimport AlternativeMessage from './AlternativeMessage/AlternativeMessage';\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n    addMessage: () => void\r\n}\r\n\r\n\r\nfunction Dialogs(props: PropsType) {\r\n\r\n    const dialogsElements = props.dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id} src={d.src} />\r\n    )\r\n\r\n    const messageElements = props.message.map(m =>\r\n        <Message key={m.id}\r\n            id={m.id} avatar={m.avatar} name={m.name} message={m.message} time={m.time}\r\n        />\r\n    )\r\n\r\n\r\n    const scroll = React.useRef(null)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div style={{ overflow: 'auto', height: '500px' }}>\r\n                {messageElements}\r\n                <div ref={scroll} ></div>\r\n            </div>\r\n            <div />\r\n            <div style={{ margin: '15px' }} >\r\n                <AlternativeMessage\r\n                    addMessage={props.addMessage}\r\n                    scroll={scroll}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../redux/redux-store';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nexport const WithAuthRedirect = (Component: any) => {\r\n   \r\n    class RedirectComponent extends React.Component<any, PropsType> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n   \r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConectedAuthRedirectComponent;\r\n}\r\n\r\n\r\nexport default WithAuthRedirect","\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport { addMessage, DialogsType, MessageType } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { ComponentType } from 'react';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    message: state.dialogsPage.message,\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { addMessage }),\r\n)(Dialogs)\r\n\r\n\r\n\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\n\r\ntype PropsType = {\r\n    value: string\r\n    updateStatus: (value: string) => void\r\n}\r\n\r\nfunction ProfileStatus(props: PropsType) {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.value)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.value);\r\n    }, [props.value])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setStatus(props.value);\r\n    }\r\n\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b> Status: </b> <span onDoubleClick={activateEditMode}>{props.value || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div >\r\n                    <input autoFocus onBlur={activateViewMode} \r\n                    onChange={onStatusChange}\r\n                      value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport { ProfileType } from '../../../redux/profile-reducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/images/user.png';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    updateStatus: (value: string) => void\r\n    status: string\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                   <img src={props.profile.photos.large != null \r\n                    ? props.profile.photos.large  \r\n                    : userPhoto} className={s.userPhoto}  alt='avatar' />\r\n                <div>\r\n                    <b>Full name</b>: {props.profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <ProfileStatus updateStatus={props.updateStatus} value={props.status} />\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {props.profile.lookingForAJob &&\r\n                    <div>\r\n                        <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n                    </div>\r\n                }\r\n\r\n                    <b>About me</b>: {props.profile.aboutMe}\r\n                    <p><b>Contacts: </b></p>\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.mainLink}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import { profileAPI } from \"../api/api\"\r\nimport { AppThunkType } from \"./redux-store\"\r\n\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const DELETE_POST = 'DELETE_POST'\r\n\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    // large: string | null\r\n    large: any\r\n}\r\n\r\ntype ContactType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactType\r\n    photos: PhotosType\r\n\r\n}\r\n\r\n// export type profileReducerType = {\r\n//     posts: Array<PostType>\r\n//     newPostText: string\r\n//     profile: ProfileType\r\n// }\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Yo\", likesCount: 23 },\r\n        { id: 2, message: \"I'm in to IT\", likesCount: 12 },\r\n        { id: 3, message: \"I'\", likesCount: 57 },\r\n        { id: 4, message: \"I'm a BOSS\", likesCount: 23 }\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return { ...state, newPostText: action.newText }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\ntype AddPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => ({ type: ADD_POST } as const)\r\n\r\n\r\ntype UpdateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (text: string) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\r\n\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: any) =>\r\n    ({ type: SET_USER_PROFILE, profile } as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (status: string) =>\r\n    ({ type: SET_STATUS, status } as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({ type: DELETE_POST, postId } as const)\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number): AppThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfie(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): AppThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostType\r\n    | UpdateNewPostTextType\r\n    | SetUserProfileType\r\n    | SetStatusType\r\n    | DeletePostType\r\n\r\n\r\nexport default profileReducer\r\n","import React, { useState } from 'react';\r\nimport styles from './Post.module.css';\r\n\r\ntype PropsType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nconst buttonStyle = {\r\n  border: 'none',\r\n  outline: 'none',\r\n  cursor: \"pointer\",\r\n  font: \"inherit\"\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n\r\n  const [likes, setLikes] = useState(props.likesCount)\r\n  const [likeIt, setLikeIt] = useState(false)\r\n\r\n\r\n  const handleClick = () => {\r\n    if (!likeIt) {\r\n      setLikes(likes + 1)\r\n      setLikeIt(true)\r\n    } else {\r\n      setLikes(likes - 1)\r\n      setLikeIt(false)\r\n    }\r\n    console.log(likes)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.item}>\r\n      <img src='https://i.pinimg.com/600x315/63/e4/e2/63e4e23fffdb56ee09a20ff630eef6ea.jpg' alt='Ava' />\r\n      {props.message}\r\n      <div>\r\n        <span> \r\n          <button style={buttonStyle}\r\n            onClick={handleClick}\r\n          >\r\n            {likeIt ? \"💙\" : \"🤍\"}\r\n          </button>\r\n        </span> {likes} likes\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { ChangeEvent } from 'react';\r\nimport Post from './Post/Post';\r\nimport styles from './MyPosts.module.css';\r\nimport { PostType } from '../../../redux/profile-reducer';\r\n\r\ntype PropsType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n  addPost: () => void\r\n  updateNewPostText: (text: string) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: PropsType) => {\r\n\r\n  const postElements = props.posts.map(p =>\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  )\r\n\r\n  const addPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let text = e.currentTarget.value\r\n    props.updateNewPostText(text)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      My posts\r\n      <div>\r\n        <textarea\r\n          value={props.newPostText}\r\n          onChange={onPostChange}\r\n          className={styles.textarea}\r\n        />\r\n        <button onClick={addPost}\r\n          className={styles.button}>Add post</button>\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\nexport default MyPosts;","\r\nimport { AppRootStateType } from '../../../redux/redux-store';\r\nimport { addPost, PostType, updateNewPostText } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MapStateToPropsType => ({\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n})\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    updateNewPostText\r\n})(MyPosts)\r\n\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport { ProfileType } from '../../redux/profile-reducer';\r\n\r\ntype PropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatus: (value: string) => void\r\n}\r\n\r\n\r\nconst Profile = (props: PropsType) => {\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <ProfileInfo updateStatus={props.updateStatus} status={props.status} profile={props.profile} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","\r\nimport React, { ComponentType } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n    function ComponentWithRouterProp(props: T) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n }\r\n \r\n","import React, { ComponentType, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../redux/redux-store';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, ProfileType } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from '../../hoc/WithRouter';\r\nimport { compose } from 'redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    authorizedUserId: number\r\n    status: string\r\n    getStatus: (userId: any) => void\r\n    getUserProfile: (userId: any) => void\r\n    updateStatus: (value: string) => void\r\n}\r\n\r\nconst ProfileContainer = (props: PropsType) => {\r\n\r\n    let navigate = useNavigate()\r\n    let {userId} = useParams();\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            let userId = props.authorizedUserId;\r\n            if (!userId) {\r\n                navigate(\"/login\");\r\n            }\r\n            props.getUserProfile(userId)\r\n            props.getStatus(userId)\r\n        }\r\n    }, [userId, navigate, props])\r\n\r\n    return <Profile {...props}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n    />\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    // WithAuthRedirect,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n)(ProfileContainer)\r\n","import React, { useState } from 'react';\r\nimport styles from './Music.module.css'\r\n\r\n\r\nfunction Music() {\r\n\r\n    const [switchOnOff, setSwitchOnOff] = useState(false)\r\n\r\n    let url = \"http://streaming.tdiradio.com:8000/house.mp3\";\r\n\r\n    let audio = new Audio(url);\r\n\r\n    const handleOnOffClick = () => {\r\n        if (switchOnOff === false) {\r\n            setSwitchOnOff(true)\r\n            audio.pause()\r\n        } else {\r\n            setSwitchOnOff(false)\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pleer}>\r\n            <div>\r\n                <div className={styles.item}>Radio📻</div>\r\n            </div>\r\n            <button onClick={() => handleOnOffClick()} >\r\n                {\r\n                    !switchOnOff ? <h2>▶️</h2> : <h2>⏸️</h2>\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props: PropsType) {\r\n    console.log(props.isAuth)\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            {\r\n                props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to='/login' > Login </NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header\r\n","\r\nimport { authAPI } from \"../api/api\";\r\nimport { AppThunkType } from \"./redux-store\";\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport type authReducerType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: AuthActionsType): authReducerType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\ntype setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n) =>\r\n    ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } } as const)\r\n\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch) => {\r\n    const data = await authAPI.me();\r\n    if (data.resultCode === 0) {\r\n        let { id, email, login } = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: number, rememberMe: boolean, captcha = false): AppThunkType => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe, captcha)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n\r\n}\r\nexport const logout = (): AppThunkType => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type AuthActionsType = setAuthUserDataType\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AppRootStateType } from '../../redux/redux-store'\r\nimport Header from './Header'\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any, PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.css'\r\nimport { AppRootStateType } from \"../../redux/redux-store\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\r\n});\r\n\r\nconst LoginForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  let handleSubmit = (values: any) => {\r\n    dispatch(loginTC(values.email, values.password, values.rememberMe));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Login</h1>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", rememberMe: false }}\r\n        validationSchema={loginSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ isSubmitting }) => {\r\n          return (\r\n            <Form className={s.loginBlock} >\r\n              <label>\r\n                Email: <Field placeholder=\"email\" type=\"email\" name=\"email\" />\r\n                <ErrorMessage className={s.errors} name=\"email\" component=\"div\" />\r\n              </label>\r\n              <label>\r\n                Password:\r\n                <Field placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                <ErrorMessage className={s.errors} name=\"password\" component=\"div\" />\r\n              </label>\r\n              <button type=\"submit\" color={'primary'} disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n\r\n  debugger\r\n  if (isAuth) {\r\n    return <Navigate to={\"/profile\"} />\r\n  }\r\n\r\n  return (\r\n    <div className={s.loginForm}>\r\n      <LoginForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import { getAuthUserData } from './auth-reducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\ntype AppReducerType = typeof initialState\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionsType): AppReducerType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const)\r\n\r\nexport const initializeApp = () => async (dispatch: any) => {\r\n\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\nexport type AppActionsType = initializedSuccessType\r\n\r\nexport default appReducer\r\n","import React, { Component, ComponentType } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Music from './components/Music/Music';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer'\r\nimport { withRouter } from './hoc/WithRouter'\r\nimport { compose } from 'redux';\r\nimport { AppRootStateType } from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\ntype PropsType = {\r\n  initializeApp: () => void\r\n  initialized: boolean\r\n}\r\n\r\n\r\nclass App extends Component<PropsType, PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div\r\n        style={{ position: 'fixed', top: '30%', textAlign: 'center', width: '100%' }}>\r\n        <Preloader />\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Routes>\r\n            <Route path=\"/login\" element={ <Login />} />\r\n            <Route path='/' element={<Navigate to={\"/profile\"} />} />\r\n            <Route path=\"/profile/*\" element={ <ProfileContainer />} />\r\n            <Route path=\"/profile/:userId\" element={ <ProfileContainer />} />\r\n            <Route path=\"/dialogs/*\" element={ <DialogsContainer />} />\r\n            <Route path=\"/users\" element={<UsersContainer />} />\r\n            <Route path=\"/calendar\" element={<Calendar />} />\r\n            <Route path=\"/music\" element={  <Music />} />\r\n            <Route path=\"404\" element={ <h1 style={{ textAlign: 'center' }} >404: PAGE NOT FOUND</h1>} />\r\n            <Route path=\"*\" element={<Navigate to='404' />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter,\r\n)(App)\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionsType, authReducer } from './auth-reducer';\r\nimport { usersReducer } from './users-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionsType } from \"./dialogs-reducer\";\r\nimport profileReducer, { ProfileActionsType } from \"./profile-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport appReducer, { AppActionsType } from './app-reducer';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AllActionsType =\r\n    AppActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | AuthActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AllActionsType>\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { store } from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Message_display__1EHVd\",\"message\":\"Message_message__ABkZL\",\"description\":\"Message_description__3trQ6\",\"angle\":\"Message_angle__2v-k7\",\"name\":\"Message_name__2eLj0\",\"text\":\"Message_text__2Dm9O\",\"time\":\"Message_time__1ODfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__6rxj1\",\"dialogsItems\":\"Dialogs_dialogsItems__3gA3l\",\"active\":\"Dialogs_active__2MX0L\",\"dialog\":\"Dialogs_dialog__EU5iR\",\"messages\":\"Dialogs_messages__9dv1e\",\"message\":\"Dialogs_message__1aPDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1gSQb\",\"pageNumber\":\"Paginator_pageNumber__2P-eV\",\"selectedPage\":\"Paginator_selectedPage__2esd6\",\"buttonPrev\":\"Paginator_buttonPrev__2_aIG\",\"buttonNext\":\"Paginator_buttonNext__2x3-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__qumOe\",\"loginBlock\":\"Login_loginBlock__Z-_Xs\",\"errors\":\"Login_errors__3dS0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__9cMJ0\",\"posts\":\"MyPosts_posts__3d0Un\",\"textarea\":\"MyPosts_textarea__jzmwN\",\"button\":\"MyPosts_button__A01AX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__33JVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pleer\":\"Music_pleer__2ayyf\",\"item\":\"Music_item__1eXWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H_o5P\",\"loginBlock\":\"Header_loginBlock__1sTzL\"};"],"sourceRoot":""}